{"version":3,"sources":["webpack://celenganku-app/./src/scripts/components/sidebar-nav.js","webpack://celenganku-app/./src/scripts/helper/form-validation.js","webpack://celenganku-app/./src/scripts/index.js"],"names":["Sidebar","colorClass","this","_type","className","_bgColor","innerHTML","_renderNavsByType","type","_render","HTMLElement","customElements","define","init","formInputs","submitButton","_formInputs","_submitButton","_createEvent","undefined","length","forEach","input","_showPasswordToggle","addEventListener","event","preventDefault","_validateInput","passwordInputWrapper","document","createElement","id","parentElement","insertBefore","appendChild","passwordToggle","getElementById","console","log","passwordLabel","querySelector","focus","errorInputClasss","successInputClasss","alertElement","alertText","dataset","rule","split","value","push","name","includes","splice","indexOf","mustNumber","parseInt","replace","equalElementValue","checkElement","classList","add","remove","nextSibling","error","validatedCounts","querySelectorAll","disabled","app","App","content","sidebar","appbar","window","loadPage","module","hot","accept"],"mappings":"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","file":"main.49ea73a0.js","sourcesContent":["/* eslint-disable class-methods-use-this */\nclass Sidebar extends HTMLElement {\n  set type(type) {\n    this._type = type\n    this._render()\n  }\n\n  _bgColor() {\n    let colorClass = 'bg-primary'\n    if (this._type === 'admin') {\n      colorClass = 'bg-blue-500'\n    }\n    return colorClass\n  }\n\n  _renderNavsByType() {\n    const type = this._type\n    let navs = ''\n    if (type === 'admin') {\n      // Admin navs\n      navs = `<a class=\"btn-nav rounded-b-lg md:rounded-none md:rounded-l-lg active\" href=\"#/admin\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                d=\"M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n            </svg>\n        </a>\n        <a class=\"btn-nav rounded-b-lg md:rounded-none md:rounded-l-lg\" href=\"#/admin/pay\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n        </a>\n        <a class=\"btn-nav rounded-b-lg md:rounded-none md:rounded-l-lg\" href=\"#/admin/data\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        </a>`\n    } else {\n      // User/Siswa Navs\n      navs = `<a class=\"btn-nav rounded-b-lg md:rounded-none md:rounded-l-lg active\" href=\"#/dashboard\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                  d=\"M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n          </svg>\n        </a>\n        <a class=\"btn-nav rounded-b-lg md:rounded-none md:rounded-l-lg\" href=\"#/pay\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\" />\n      </svg>\n        </a>\n        <a class=\"btn-nav rounded-b-lg md:rounded-none md:rounded-l-lg\" href=\"#/profile\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        </a>`\n    }\n    return navs\n  }\n\n  _render() {\n    this.className = `${this._bgColor()} fixed bottom-0 w-full md:relative md:w-auto md:h-auto md:min-h-screen`\n    this.innerHTML = `\n    <div id=\"navs\" class=\"sticky top-0 flex flex-row justify-evenly md:flex-col\">\n        <p class=\"h-16 w-16 p-4 text-white\">\n            <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g stroke=\"null\">\n                <ellipse stroke=\"#000\" ry=\"4.54353\" rx=\"4.54353\" id=\"svg_2\" cy=\"12\" cx=\"5.51189\" stroke-width=\"0\" fill=\"#ffffff\"/>\n                <ellipse stroke=\"#000\" ry=\"4.54353\" rx=\"4.54353\" id=\"svg_3\" cy=\"12\" cx=\"18.48811\" stroke-width=\"0\" fill=\"#ffffff\"/>\n            </g>\n            </svg>\n        </p>\n        ${this._renderNavsByType()}\n    </div>`\n  }\n}\ncustomElements.define('sidebar-nav', Sidebar)\n","/* eslint-disable prefer-destructuring */\nconst formValidation = {\n  async init({ formInputs, submitButton }) {\n    this._formInputs = formInputs\n    this._submitButton = submitButton\n    await this._createEvent()\n  },\n\n  async _createEvent() {\n    const formInputs = this._formInputs\n\n    if (formInputs.length !== undefined) {\n      formInputs.forEach((input) => {\n        this._showPasswordToggle(input)\n        input.addEventListener('keyup', (event) => {\n          event.preventDefault()\n          this._validateInput(input)\n        })\n      })\n    } else {\n      this._showPasswordToggle(formInputs)\n      formInputs.addEventListener('keyup', (event) => {\n        event.preventDefault()\n        this._validateInput(formInputs)\n      })\n    }\n  },\n\n  async _showPasswordToggle(input) {\n    if (input.type === 'password') {\n      const passwordInputWrapper = document.createElement('div')\n      passwordInputWrapper.className = 'relative w-full'\n      passwordInputWrapper.id = `${input.id}-wrapper`\n      passwordInputWrapper.innerHTML = `\n          <div class=\"absolute inset-y-0 right-0 flex items-center px-2\">\n            <input class=\"hidden password-toggle\" id=\"${input.id}-toggle\" type=\"checkbox\">\n            <label class=\"rounded px-2 py-1 text-sm text-gray-600 font-mono cursor-pointer password-label\" for=\"${input.id}-toggle\">\n            <svg class=\"w-8 h-8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n        </svg>\n            </label>\n          </div>`\n      input.parentElement.insertBefore(passwordInputWrapper, input)\n      passwordInputWrapper.appendChild(input)\n\n      const passwordToggle = document.getElementById(`${input.id}-toggle`)\n      console.log(passwordToggle)\n\n      passwordToggle.addEventListener('change', () => {\n        const passwordLabel = passwordToggle.parentElement.querySelector('.password-label')\n        if (input.type === 'password') {\n          input.type = 'text'\n          passwordLabel.innerHTML = `<svg class=\"w-8 h-8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n        </svg>`\n        } else {\n          input.type = 'password'\n          passwordLabel.innerHTML = `<svg class=\"w-8 h-8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n        </svg>`\n        }\n        input.focus()\n      })\n    }\n  },\n\n  async _validateInput(input) {\n    const errorInputClasss = ['border-red-500', 'border-opacity-50', 'focus:border-red-500']\n    const successInputClasss = ['border-green-500', 'border-opacity-50', 'focus:border-green-500']\n\n    const alertElement = document.createElement('span')\n    alertElement.className = 'text-sm text-red-500'\n    alertElement.id = `${input.id}-alert`\n\n    const alertText = []\n\n    if ('rule' in input.dataset) {\n      const validationRules = input.dataset.rule.split(' ')\n      validationRules.forEach((rule) => {\n        if (rule === 'required') {\n          if (input.value === '') {\n            alertText.push(`${input.name} tidak boleh kosong`)\n          } else if (alertText.includes(`${input.name} tidak boleh kosong`)) {\n            alertText.splice(alertText.indexOf(`${input.name} tidak boleh kosong`), 1)\n          }\n        } else if (rule === 'no-space') {\n          if (input.value.indexOf(' ') >= 0) {\n            alertText.push(`${input.name} tidak boleh mengandung spasi`)\n          } else if (alertText.includes(`${input.name} tidak boleh mengandung spasi`)) {\n            alertText.splice(alertText.indexOf(`${input.name} tidak boleh mengandung spasi`), 1)\n          }\n        } else if (rule.includes('number-must-')) {\n          const mustNumber = parseInt(rule.replace('number-must-', ''), 10)\n\n          if (input.value.length < mustNumber || input.value.length > mustNumber) {\n            alertText.push(`${input.name} harus berisi ${mustNumber} digit angka`)\n          } else if (alertText.includes(`${input.name} harus berisikan ${mustNumber} digit angka`)) {\n            alertText.splice(alertText.indexOf(`${input.name} harus berisi ${mustNumber} digit angka`), 1)\n          }\n        } else if (rule.includes('email')) {\n          if (!(input.value.includes('@') && (input.value.split('@')[1]).includes('.'))) {\n            alertText.push(`${input.name} harus berisikan format: your@email.com`)\n          } else if (alertText.includes(`${input.name} harus berisikan format: your@email.com`)) {\n            alertText.splice(alertText.indexOf(`${input.name} harus berisikan format: your@email.com`), 1)\n          }\n        } else if (rule.includes('equal-')) {\n          const equalElementValue = document.querySelector(`input[data-equal=\"${rule.replace('equal-', '')}\"]`)\n\n          if (input.value !== equalElementValue.value) {\n            alertText.push(`Input harus sama dengan ${equalElementValue.name}`)\n          } else if (alertText.includes(`Input harus sama dengan ${equalElementValue.name}`)) {\n            alertText.splice(alertText.indexOf(`Input harus sama dengan ${equalElementValue.name}`), 1)\n          }\n        }\n      })\n    }\n\n    const checkElement = document.getElementById(`${input.id}-alert`)\n    if (alertText.length > 0) {\n      input.classList.add(...errorInputClasss)\n      input.classList.remove(...successInputClasss)\n      if (typeof (checkElement) !== 'undefined' && checkElement != null) {\n        checkElement.innerHTML = alertText[0]\n      } else {\n        alertElement.innerHTML = alertText[0]\n\n        if (input.name === 'Password') {\n          // eslint-disable-next-line max-len\n          input.parentElement.parentElement.insertBefore(alertElement, input.parentElement.nextSibling)\n        } else {\n          input.parentElement.insertBefore(alertElement, input.nextSibling)\n        }\n      }\n    } else {\n      try {\n        input.classList.remove(...errorInputClasss)\n        input.classList.add(...successInputClasss)\n        checkElement.remove()\n      } catch (error) {\n        // return null\n      }\n    }\n\n    const validatedCounts = document.querySelectorAll('input.border-green-500')\n\n    if (this._formInputs.length !== undefined) {\n      if (validatedCounts.length === this._formInputs.length) {\n        this._submitButton.disabled = false\n      } else {\n        this._submitButton.disabled = true\n      }\n    } else if (this._formInputs.className.includes(...successInputClasss)) {\n      this._submitButton.disabled = false\n    } else {\n      this._submitButton.disabled = true\n    }\n  },\n}\n\nexport default formValidation\n","import 'regenerator-runtime'\nimport '../styles/base.css'\nimport '../styles/components.css'\nimport '../styles/utilities.css'\n\nimport App from './views/app'\n\nconst app = new App({\n  content: document.querySelector('main'),\n  sidebar: document.createElement('sidebar-nav'),\n  appbar: document.getElementById('appbar'),\n})\n\nwindow.addEventListener('hashchange', () => {\n  app.loadPage()\n})\n\nwindow.addEventListener('load', () => {\n  app.loadPage()\n})\n\n// Needed for Hot Module Replacement\nif (typeof (module.hot) !== 'undefined') {\n  module.hot.accept() // eslint-disable-line no-undef\n}\n"],"sourceRoot":""}