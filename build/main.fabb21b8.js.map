{"version":3,"sources":["webpack://celenganku-app/./src/scripts/views/pages/user/report-preview.js","webpack://celenganku-app/./src/scripts/views/pages/user/report.js","webpack://celenganku-app/./src/scripts/views/pages/user/transaction.js"],"names":["ReportPreview","render","afterRender","preloaders","document","querySelectorAll","url","UrlParser","title","SlugParser","id","_reportTime","APIData","responseData","_userId","userAccount","userData","_ballance","saldo","_withdraw","_deposit","nameText","getElementById","nisnText","alamatText","periodeText","firstBalanceText","lastBalanceText","withdrawText","depositText","_renderTable","downloadButton","reportElement","querySelector","addEventListener","quality","html2canvas","scale","then","canvas","pdf","jsPDF","pdfWidth","internal","pageSize","getWidth","img","toDataURL","imgProps","getImageProperties","pdfHeight","height","width","addImage","output","innerHTML","nama","nisn","alamat","date","Date","y","getFullYear","m","getMonth","firstDay","lastDay","toLocaleDateString","firstDeposit","textContent","replace","firstBalance","StringFormater","length","forEach","preloader","remove","classList","reportTime","tableElement","tableBody","unsortedTransactionData","transactionData","sortBy","data","reverse","thisSaldo","transactionTemplate","transaction","Object","keys","key","toString","toUpperCase","status_transaksi","toLowerCase","timeStamp","tenggat_waktu_pembayaran","seconds","jenisTransaksi","jenis_transaksi","setDate","getDate","transactionDateMini","fixedSaldo","nominal","transactionElementArray","transactionRowTemplate","push","join","Report","_totalTransaction","totalTransactionElement","printReportButton","accountData","_createPrintEvent","printButton","ModalInitializer","content","modal","_frequencyOption","frequencyOptionButton","nextButton","option","_selectReportOption","window","location","hash","optionButton","optionId","selectedClass","nonSelectedClass","optionIcon","add","className","this","timeLeft","transactionDate","year","month","day","nominalColor","jenis","statusColor","status","renderStatusIcon","getStatusAction","id_transaksi","_cancelButtonInit","cancelButton","event","stopPropagation","Swal","icon","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","popup","confirmButton","buttonsStyling","result","isConfirmed","response","console","log","_showTransactionModalInit","showButton","metode_pembayaran","snap","pay","token","onSuccess","dispatchEvent","HashChangeEvent","onPending","onClose","modalContent","thisContent","qrContent","showQRButton","closeButton","copyButton","copyText","EventHelper","copyTextToClipboard","focus","delayTime","setInterval","DateFormater","distance","hours","minutes","counterText","counterReminder","reminderElement","initialized","error","_createTableEvent","searchInput","table","filter","target","value","preventDefault","row","rowData","textArray","innerText","textValue","indexOf","style","display","Transaction","_userAccount","_transactionOption","_paymentOption","paymentOptionButton","transactionOptionButton","nominalInput","formValidation","formInputs","submitButton","_selectTransactionOption","dataset","rule","_selectPaymentOption","_adminPaymentInit","_midtransPaymentInit","show","dataResponse","transaction_details","order_id","gross_amount","item_details","price","quantity","name","charAt","slice","brand","customer_details","first_name","email","callbacks","finish","disabled","timeCountInterval","timeCounter","_toggleQR","clearInterval","setTimeout","scrollTo","body","scrollHeight"],"mappings":"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","file":"main.fabb21b8.js","sourcesContent":["/* eslint-disable new-cap */\n/* eslint-disable max-len */\nimport html2canvas from 'html2canvas'\nimport { jsPDF } from 'jspdf'\nimport sortBy from 'lodash/sortBy'\nimport APIData from '../../../data/api-data'\nimport StringFormater from '../../../helper/string-formater'\nimport SlugParser from '../../../routes/slugparser'\nimport UrlParser from '../../../routes/urlparser'\n\nconst ReportPreview = {\n  async render() {\n    return /* html */`\n        <div class=\"text-center relative\">\n          <a href=\"#/report\" class=\"-mt-4 w-max absolute left-0 text-primary mx-1 p-4\">\n          <svg class=\"w-8 h-8 md:w-10 md:h-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path></svg>\n          </a>\n          <p class=\"text-xl leading-8 font-bold tracking-tight text-gray-800 md:text-2xl md:mt-2\">\n            Preview Laporan\n          </p>\n        </div>\n        <div class=\"flex flex-col w-full pt-0 rounded-lg mx-auto md:mt-4 shadow-lg text-gray-800 mb-24\">\n        <div id=\"report\" class=\"p-8 md:p-12 rounded-lg flex flex-col\">\n          <img class=\"w-48 mb-10\" src=\"./images/celenganku-logo.png\">\n          <p id=\"name\" class=\"text-2xl font-bold\"></p>\n          <p id=\"nisn\"class=\"mb-2 text-lg\"></p>\n          <p id=\"alamat\" class=\"text-gray-600\"><p>\n          <p id=\"periode\" class=\"mt-4 mb-6 text-sm text-primary\"></p>\n          <div class=\"flex-1 py-0 white rounded-lg\">\n          <table id=\"transaction-table\" class=\"table-auto w-full\">\n          <tbody>\n          <tr class=\"text-left text-gray-700\">\n              <th class=\"font-normal p-5 pr-0 pt-0\">Tanggal</th>\n              <th class=\"font-normal pb-5 pt-0 hidden md:table-cell\">Jenis Transaksi</th>\n              <th class=\"font-normal pb-5 pt-0\">Nominal</th>\n              <th class=\"font-normal pb-5 pt-0 \">Saldo</th>\n          </tr>\n          </tbody>\n        </table>\n          <div class=\"preloader p-4 flex mt-auto mb-auto mx-auto justify-center\">\n            <div class=\"loader loader-mini ease-linear rounded-full border-8 border-t-8 border-gray-200\"></div>\n          </div>\n          </div>\n          <div class=\"text-right mt-4\">\n          <p id=\"first-balance\" class=\"mb-2 flex\">Saldo Awal:</p>\n          <p id=\"withdraw-text\" class=\"mb-2 flex\">Pemasukan Saldo:</p>\n          <p id=\"deposit-text\" class=\"mb-2 flex\">Penarikan Saldo:</p>\n          <p id=\"last-balance\" class=\"mb-2 flex\">Saldo Akhir:</p>\n          </div>\n          </div>\n        </div>\n        <div>\n        <button id=\"download-button\" role=\"button\" class=\"hidden fixed w-max bg-primary text-white p-4 rounded-full right-0 bottom-0 mb-24 mr-8 md:mr-16 md:mb-16\">\n        <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n        </button>\n        </div>\n      `\n  },\n\n  async afterRender() {\n    const preloaders = document.querySelectorAll('.preloader')\n    const url = UrlParser.parseActiveUrlWithoutCombiner()\n    const title = SlugParser.parseToText(url.id)\n\n    this._reportTime = title\n\n    // Fetch Data\n    const responseData = await APIData.retrieveUser()\n    this._userId = responseData.id\n    const userAccount = await APIData.getAkunSiswa(this._userId)\n    const userData = await APIData.getDataSiswa(this._userId)\n    this._ballance = userAccount.saldo\n\n    // Values\n    this._withdraw = 0\n    this._deposit = 0\n\n    // Elements\n    const nameText = document.getElementById('name')\n    const nisnText = document.getElementById('nisn')\n    const alamatText = document.getElementById('alamat')\n    const periodeText = document.getElementById('periode')\n\n    const firstBalanceText = document.getElementById('first-balance')\n    const lastBalanceText = document.getElementById('last-balance')\n    const withdrawText = document.getElementById('withdraw-text')\n    const depositText = document.getElementById('deposit-text')\n\n    await this._renderTable(this._reportTime)\n    const downloadButton = document.getElementById('download-button')\n    const reportElement = document.querySelector('#report')\n    downloadButton.addEventListener('click', () => {\n      const quality = 1 // Higher the better but larger file\n      html2canvas(reportElement,\n        { scale: quality }).then((canvas) => {\n        const pdf = new jsPDF('p', 'pt', 'a4')\n        const pdfWidth = pdf.internal.pageSize.getWidth()\n        const img = canvas.toDataURL('image/jpeg', 1)\n        const imgProps = pdf.getImageProperties(img)\n        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width\n        pdf.addImage(img, 'PNG', 0, 0, pdfWidth, pdfHeight)\n        pdf.output('dataurlnewwindow')\n      })\n    })\n\n    nameText.innerHTML = userData.nama\n    nisnText.innerHTML = userData.nisn\n    alamatText.innerHTML = userData.alamat\n\n    const date = new Date()\n    const y = date.getFullYear()\n    const m = date.getMonth()\n    const firstDay = new Date(y, m, 1)\n    const lastDay = new Date(y, m + 1, 0)\n    if (this._reportTime === 'Monthly') periodeText.innerHTML = `Periode: ${firstDay.toLocaleDateString('id-ID')} s/d ${lastDay.toLocaleDateString('id-ID')}`\n    else periodeText.innerHTML = `Periode: 1/1/${y} s/d  31/1/${y}`\n\n    const firstDeposit = document.querySelector('.nominal').textContent.replace('RP ', '')\n    let firstBalance = document.querySelector('.saldo').textContent.replace('RP ', '')\n    firstBalance = StringFormater.convertCasttoInt(firstBalance) - StringFormater.convertCasttoInt(firstDeposit)\n\n    firstBalanceText.innerHTML = `Saldo Awal: <p class=\"flex ml-auto\">RP ${StringFormater.convertToCashFormat(firstBalance)}</p>`\n    depositText.innerHTML = `Pemasukan Saldo: <p class=\"flex ml-auto\">RP ${StringFormater.convertToCashFormat(this._deposit)}</p>`\n    withdrawText.innerHTML = `Penarikan Saldo: <p class=\"flex ml-auto\">RP ${StringFormater.convertToCashFormat(this._withdraw)}</p>`\n    lastBalanceText.innerHTML = `Saldo Akhir: <p class=\"flex ml-auto font-bold text-primary\">${document.querySelectorAll('.saldo')[document.querySelectorAll('.saldo').length - 1].textContent}</p>`\n    preloaders.forEach((preloader) => {\n      preloader.remove()\n    })\n    downloadButton.classList.remove('hidden')\n  },\n  async _renderTable(reportTime) {\n    const tableElement = document.getElementById('transaction-table')\n    const tableBody = tableElement.querySelector('tbody')\n    const unsortedTransactionData = await APIData.getTransaksiSiswa(this._userId)\n    const transactionData = sortBy(unsortedTransactionData.data, ['tenggat_waktu_pembayaran.seconds']).reverse()\n\n    let thisSaldo = this._ballance\n    const transactionTemplate = (transaction) => {\n      Object.keys(transaction).forEach((key) => {\n        if (typeof transaction[key] === 'object') {\n          //\n        } else if (key === 'nominal') {\n          transaction[key] = StringFormater.convertToCashFormat(transaction[key])\n        } else {\n          transaction[key] = transaction[key].toString().toUpperCase()\n        }\n      })\n\n      if (transaction.status_transaksi.toLowerCase() === 'pembayaran') return ''\n\n      const timeStamp = new Date(transaction.tenggat_waktu_pembayaran.seconds * 1000)\n      if (reportTime === 'Monthly') {\n        if (timeStamp.getMonth() !== new Date().getMonth()) return ''\n      }\n      const jenisTransaksi = transaction.jenis_transaksi\n      timeStamp.setDate(timeStamp.getDate() - 1)\n      const transactionDateMini = timeStamp.toLocaleDateString('id-ID')\n\n      const fixedSaldo = thisSaldo\n\n      if (jenisTransaksi.toLowerCase() === 'pemasukan') {\n        thisSaldo -= StringFormater.convertCasttoInt(transaction.nominal)\n        this._withdraw += StringFormater.convertCasttoInt(transaction.nominal)\n      } else {\n        thisSaldo += StringFormater.convertCasttoInt(transaction.nominal)\n        this._deposit += StringFormater.convertCasttoInt(transaction.nominal)\n      }\n\n      return /* html */`<tr class=\"font-bold text-gray-800 mb-5\">\n      <td class=\"p-5 pr-0 text-gray-500 bg-gray-200 rounded-l-lg\">${transactionDateMini.toUpperCase()}</td>\n      <td class=\"bg-gray-200 hidden md:table-cell\">${transaction.jenis_transaksi}</td>\n      <td class=\"nominal bg-gray-200 \">RP ${transaction.nominal}</td>\n      <td class=\"saldo bg-gray-200 rounded-r-lg\">RP ${StringFormater.convertToCashFormat(fixedSaldo)}</td>\n      </td>\n    </tr>\n    <tr class=\"h-4\"></tr>`\n    }\n\n    tableBody.innerHTML = `\n    <tr class=\"text-left text-gray-700\">\n      <th class=\"font-normal p-5 pr-0 pt-0\">Tanggal</th>\n      <th class=\"font-normal pb-5 pt-0 hidden md:table-cell\">Jenis Transaksi</th>\n      <th class=\"font-normal pb-5 pt-0\">Nominal</th>\n      <th class=\"font-normal pb-5 pt-0 \">Saldo</th>\n    </tr>`\n    const transactionElementArray = []\n    let transactionRowTemplate = []\n    transactionData.forEach((transaction) => {\n      transactionElementArray.push(transactionTemplate(transaction))\n    })\n    transactionRowTemplate = transactionElementArray.reverse()\n    tableBody.innerHTML += transactionRowTemplate.join('')\n  },\n}\n\nexport default ReportPreview\n","import Swal from 'sweetalert2'\nimport sortBy from 'lodash/sortBy'\nimport StringFormater from '../../../helper/string-formater'\nimport DateFormater from '../../../helper/date-formater'\nimport APIData from '../../../data/api-data'\nimport ModalInitializer from '../../../utils/modal-initializer'\n\nconst Report = {\n  async render() {\n    return /* html */`\n    <div class=\"text-center\">\n    <p class=\"text-xl leading-8 font-bold tracking-tight text-gray-800 md:text-2xl md:mt-2\">\n      Riwayat Transaksi\n    </p>\n    <div class=\"flex flex-row mt-4 md:mt-6 \">\n      <div class=\"flex flex-row\">\n        <button id=\"print-report-button\" class=\"w-max bg-primary text-white mx-1 py-3 px-5 rounded-lg disabled:opacity-50\">Cetak Laporan</button>\n        <p id=\"total-transaction\" class=\"hidden md:inline mt-3 ml-4 text-gray-700\">Total Transaksi:</p>\n      </div>\n      <div class=\"flex flex-1 md:flex-initial ml-4 md:ml-auto flex-row \">\n      <input id=\"search-input\" placeholder=\"Cari tanggal, nominal, dll\" value=\"\" type=\"text\" class=\"text-md block px-5 py-3 rounded-lg w-full bg-gray-200\">\n      <svg class=\"w-8 h-8 mt-auto mb-auto ml-4 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.1\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n      </div>\n    </div>\n  </div>\n    <div class=\"bg-gray-200 gap-5 p-4 rounded-lg flex flex-col mt-6 md:p-8\">\n      <div class=\"flex-1 py-0 white rounded-lg\">\n      <table id=\"transaction-table\" class=\"table-auto w-full\">\n      <tbody>\n      <tr class=\"text-left text-gray-700\">\n          <th class=\"font-normal p-5 pr-0 pt-0\">Tanggal</th>\n          <th class=\"font-normal pb-5 pt-0 hidden lg:table-cell\">ID Transaksi</th>\n          <th class=\"font-normal pb-5 pt-0\">Nominal</th>\n          <th class=\"font-normal pb-5 pt-0 hidden lg:table-cell\">Metode</th>\n          <th class=\"font-normal pb-5 pt-0 hidden lg:table-cell\">Jenis</th>\n          <th class=\"font-normal pb-5 pt-0\">Status</th>\n          <th class=\"font-normal pb-5 pt-0 justify-end\"></th>\n        </tr>\n      </tbody>\n    </table>\n      <div class=\"preloader p-4 flex mt-auto mb-auto mx-auto justify-center\">\n        <div class=\"loader loader-mini ease-linear rounded-full border-8 border-t-8 border-gray-200\"></div>\n      </div>\n      </div>\n    </div>\n      `\n  },\n\n  async afterRender() {\n    // Remove Preloders\n    this._totalTransaction = 0\n    const totalTransactionElement = document.getElementById('total-transaction')\n    const preloaders = document.querySelectorAll('.preloader')\n    const printReportButton = document.getElementById('print-report-button')\n\n    // Fetch Data\n    const responseData = await APIData.retrieveUser()\n    this._userId = responseData.id\n    const accountData = await APIData.getAkunSiswa(this._userId)\n    this._ballance = accountData.saldo\n\n    await this._renderTable()\n    await this._createPrintEvent(printReportButton)\n    totalTransactionElement.innerHTML = `Total Transaksi: Rp ${StringFormater.convertToCashFormat(this._totalTransaction)}`\n    preloaders.forEach((preloader) => {\n      preloader.remove()\n    })\n  },\n\n  async _createPrintEvent(printButton) {\n    printButton.addEventListener('click', () => {\n      ModalInitializer.init({\n        title: 'Laporan',\n        content:\n        `<div class=\"px-10 py-6\">\n          <div id=\"modal-content\">\n            <p class=\"mt-2 mb-1\">Pilih Jangka Waktu</p>\n            <div class=\"my-4 flex flex-col gap-4 md:flex-row\">\n            <button id=\"monthly-option\" class=\"w-full p-4 border-2 border-primary bg-white shadow-lg rounded-lg focus:outline-none \">\n              <div class=\"flex flex-1 md:justify-center\">\n                <div class=\"text-white flex flex-1 flex-row\">\n                  <div data-option class=\"mx-2 my-auto text-sm bg-primary text-white p-1 rounded-lg\">\n                  <p><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.5\" d=\"M5 13l4 4L19 7\"></path></svg></p>\n                  </div>\n                  <p class=\"text-gray-700 mt-1\">Bulan Ini</p>\n                </div>\n              </div>\n            </button>\n            <button id=\"yearly-option\" class=\"w-full p-4 bg-white shadow-lg rounded-lg focus:outline-none \">\n              <div class=\"flex flex-1 md:justify-center\">\n                <div class=\"text-white flex flex-1 flex-row\">\n                  <div data-option class=\"mx-2 my-auto text-sm bg-gray-300 text-gray-300 p-1 rounded-lg\">\n                  <p><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.5\" d=\"M5 13l4 4L19 7\"></path></svg></p>\n                  </div>\n                  <p class=\"text-gray-700 mt-1\">Tahun Ini</p>\n                </div>\n              </div>\n            </button>\n            </div>\n          </div>\n          <div class=\"flex justify-end items-center w-100 mt-4\">\n            <button role=\"button\" id=\"next-button\" class=\"w-max bg-primary text-white mx-1 py-3 px-8 rounded-lg disabled:opacity-50\">Cetak</button>\n          </div>\n        </div>`,\n      })\n      const modal = document.getElementById('modal-laporan')\n\n      this._frequencyOption = 'monthly'\n      const frequencyOptionButton = document.querySelectorAll('#monthly-option, #yearly-option')\n      const nextButton = document.getElementById('next-button')\n\n      frequencyOptionButton.forEach((option) => {\n        option.addEventListener('click', () => {\n          this._selectReportOption(frequencyOptionButton, option.id)\n        })\n      })\n      nextButton.addEventListener('click', () => {\n        window.location.hash = `#/report/${this._frequencyOption}`\n        modal.remove()\n      })\n    })\n  },\n\n  _selectReportOption(optionButton, optionId) {\n    const selectedClass = 'mx-2 my-auto text-sm bg-primary text-white p-1 rounded-lg'\n    const nonSelectedClass = 'mx-2 my-auto text-sm bg-gray-200 text-gray-200 p-1 rounded-lg'\n    optionButton.forEach((option) => {\n      const optionIcon = option.querySelector('div[data-option]')\n      if (option.id === optionId) {\n        option.classList.add('border-2', 'border-primary')\n        optionIcon.className = selectedClass\n      } else {\n        option.classList.remove('border-2', 'border-primary')\n        optionIcon.className = nonSelectedClass\n      }\n    })\n    this._frequencyOption = optionId.replace('-option', '')\n  },\n\n  async _renderTable() {\n    const tableElement = document.getElementById('transaction-table')\n    const tableBody = tableElement.querySelector('tbody')\n    const unsortedTransactionData = await APIData.getTransaksiSiswa(this._userId)\n    const transactionData = sortBy(unsortedTransactionData.data, ['tenggat_waktu_pembayaran.seconds']).reverse()\n\n    const transactionTemplate = (transaction) => {\n      Object.keys(transaction).forEach((key) => {\n        if (typeof transaction[key] === 'object') {\n          //\n        } else if (key === 'nominal') {\n          transaction[key] = StringFormater.convertToCashFormat(transaction[key])\n        } else {\n          transaction[key] = transaction[key].toString().toUpperCase()\n        }\n      })\n\n      const timeStamp = new Date(transaction.tenggat_waktu_pembayaran.seconds * 1000)\n      const jenisTransaksi = transaction.jenis_transaksi\n      const timeLeft = new Date()\n      timeLeft.setDate(timeStamp.getDate())\n      timeStamp.setDate(timeStamp.getDate() - 1)\n      const transactionDate = timeStamp.toLocaleDateString('id-ID', { year: 'numeric', month: 'long', day: 'numeric' })\n      const transactionDateMini = timeStamp.toLocaleDateString('id-ID')\n\n      if (transaction.status_transaksi.toLowerCase() === 'selesai') {\n        this._totalTransaction += StringFormater.convertCasttoInt(transaction.nominal)\n      }\n\n      // Classes\n      const nominalColor = (jenis) => {\n        if (jenis.toLowerCase() === 'pemasukan') return 'text-success'\n        return 'text-failed'\n      }\n\n      const statusColor = (status) => {\n        if (status.toLowerCase() === 'selesai') return 'bg-primary text-white'\n        return 'bg-primaryDisable text-primary'\n      }\n\n      const renderStatusIcon = (status) => {\n        if (status.toLowerCase() === 'selesai') return 'M5 13l4 4L19 7'\n        return 'M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'\n      }\n\n      const getStatusAction = (status) => {\n        if (status.toLowerCase() === 'selesai') {\n          return `\n          <button id=\"show-transaction-button-${transaction.id_transaksi}\"\n            class=\"flex w-full flex-1 px-4 py-3 text-sm font-normal text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n            role=\"menuitem\">\n            <i class=\"text-primary flex\">\n            <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path></svg>\n            </i>\n            <p class=\"flex ml-2 mt-1 leading-relaxed\">Lihat Transaksi</p>\n          </button>`\n        }\n        return `\n        <button id=\"show-transaction-button-${transaction.id_transaksi}\"\n            class=\"flex w-full flex-1 px-4 py-3 text-sm font-normal text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n            role=\"menuitem\">\n            <i class=\"text-primary flex\">\n            <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\"></path></svg>\n            </i>\n            <p class=\"flex ml-2 mt-1 leading-relaxed\">Bayar Transaksi</p>\n          </button>\n          <button id=\"cancel-transaction-button-${transaction.id_transaksi}\"\n            class=\"flex w-full flex-1 px-4 py-3 text-sm font-normal text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n            role=\"menuitem\">\n            <i class=\"text-primary flex\"><svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"></path>\n              </svg></i>\n            <p class=\"flex ml-2 mt-1 leading-relaxed\">Batalkan Transaksi</p>\n          </button>`\n      }\n\n      const _cancelButtonInit = (cancelButton) => {\n        cancelButton.addEventListener('click', async (event) => {\n          event.stopPropagation()\n          const result = await Swal.fire({\n            icon: 'warning',\n            text: 'Tekan pilihan untuk mengkonfirmasi',\n            title: 'Apakah benar ingin membatalkan transaksi?',\n            showCancelButton: true,\n            confirmButtonText: 'Benar',\n            cancelButtonText: 'Tidak',\n            customClass: {\n              popup: 'popup-sweetalert',\n              confirmButton: 'btn-sweetalert bg-success',\n              cancelButton: 'btn-sweetalert bg-failed',\n            },\n            buttonsStyling: false,\n          })\n\n          if (result.isConfirmed) {\n            const response = await APIData.deleteTransaksiSiswa(transaction.id_transaksi)\n            console.log(response)\n            this._renderTable()\n          }\n        })\n        return true\n      }\n\n      const _showTransactionModalInit = (showButton) => {\n        showButton.addEventListener('click', () => {\n          if (transaction.metode_pembayaran.toLowerCase() === 'daring' && transaction.status_transaksi.toLowerCase() === 'pembayaran') {\n            snap.pay(transaction.token.toLowerCase(), {\n              onSuccess: async (result) => {\n              /* You may add your own implementation here */\n                console.log(result)\n                const response = await APIData.updateTransaction(transaction.id_transaksi, {\n                  status_transaksi: 'selesai',\n                })\n                console.log(response)\n                window.dispatchEvent(new HashChangeEvent('hashchange'))\n              },\n              onPending() {\n                /* You may add your own implementation here */\n                // window.location.hash = '#'\n              },\n              onClose() {\n                //\n              },\n            })\n            return true\n          }\n\n          ModalInitializer.init({\n            title: 'Kode Transaksi',\n            content:\n            `<div class=\"px-10 py-6\">\n              <div id=\"modal-content\">\n                <p class=\"mt-2 mb-1\">Kode Transaksi kamu adalah</p>\n                <div class=\"flex flex-row\">\n                <p id=\"id-transaksi\" class=\"my-2 text-3xl select-all font-bold\">${transaction.id_transaksi}</p>\n                <button role=\"button\" id=\"copy-button\" class=\"w-max text-primary ml-2 font-light p-2\">\n                <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\"></path></svg>\n                </button>\n                </div>\n              </div>\n              <div class=\"flex justify-end items-center w-100 mt-4\">\n                <button role=\"button\" id=\"show-qr-button\" class=\"w-max text-primary mx-1 font-light p-2\">\n                <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"></path></svg></button>\n                <button role=\"button\" id=\"close-button\" class=\"w-max bg-primary text-white mx-1 py-3 px-8 rounded-lg disabled:opacity-50\">Tutup</button>\n              </div>\n            </div>`,\n          })\n          const modal = document.getElementById('modal-kode-transaksi')\n          const modalContent = document.getElementById('modal-content')\n          const thisContent = modalContent.innerHTML\n          const qrContent = `<img class=\"mx-auto\" src=\"https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${transaction.id_transaksi}\"></img>`\n          const showQRButton = document.getElementById('show-qr-button')\n          const closeButton = document.getElementById('close-button')\n          const copyButton = document.getElementById('copy-button')\n          const copyText = document.getElementById('id-transaksi')\n          copyButton.addEventListener('click', () => {\n            EventHelper.copyTextToClipboard(transaction.id_transaksi)\n            copyText.focus()\n          })\n          showQRButton.addEventListener('click', (event) => {\n            if (modalContent.innerHTML === thisContent) modalContent.innerHTML = qrContent\n            else modalContent.innerHTML = thisContent\n          })\n          closeButton.addEventListener('click', () => {\n            modal.remove()\n          })\n        })\n        return true\n      }\n\n      if (transaction.status_transaksi.toLowerCase() === 'pembayaran') {\n        let delayTime = 1000\n        setInterval(async () => {\n          try {\n            const {\n              distance, hours, minutes,\n            } = DateFormater.getTimeCounter(timeLeft)\n            const counterText = `${hours} jam ${minutes} menit`\n            const counterReminder = `Transaksi ini akan automatis dibatalkan dalam <br><b class=\"flex mt-3 text-primary\">${counterText}</b>`\n            const reminderElement = document.getElementById(`reminder-element-${transaction.id_transaksi}`)\n            reminderElement.className = 'p-5 text-sm font-normal text-gray-600'\n            reminderElement.innerHTML = counterReminder\n\n            if (distance < 0) {\n              await APIData.deleteTransaksiSiswa(transaction.id_transaksi)\n              this._renderTable()\n            }\n\n            // if (distance < 0) console.log('telat bang')\n            let initialized = false\n            while (!initialized) {\n              const cancelButton = document.getElementById(`cancel-transaction-button-${transaction.id_transaksi}`)\n              initialized = _cancelButtonInit(cancelButton)\n              delayTime = 60000\n            }\n          } catch (error) {\n            // console.log('')\n          }\n        }, delayTime)\n      }\n\n      setInterval(() => {\n        try {\n          let initialized = false\n          while (!initialized) {\n            const showButton = document.getElementById(`show-transaction-button-${transaction.id_transaksi}`)\n            initialized = _showTransactionModalInit(showButton)\n          }\n        } catch (error) {\n          // console.log('')\n        }\n      }, 1000)\n\n      return /* html */`<tr class=\"font-bold text-gray-800 mb-5 hover:shadow-lg\">\n      <td class=\"hidden md:table-cell p-5 pr-0 text-gray-500 bg-white rounded-l-lg\">${transactionDate.toUpperCase()}</td>\n      <td class=\"table-cell md:hidden p-5 pr-0 text-gray-500 bg-white rounded-l-lg\">${transactionDateMini.toUpperCase()}</td>\n      <td class=\"bg-white select-all hidden lg:table-cell\">${transaction.id_transaksi}</td>\n      <td class=\"bg-white ${nominalColor(jenisTransaksi)}\">RP ${transaction.nominal}</td>\n      <td class=\"bg-white hidden lg:table-cell\">${transaction.metode_pembayaran}</td>\n      <td class=\"bg-white hidden lg:table-cell\">${jenisTransaksi}</td>\n      <td class=\"bg-white\">\n        <div class=\"ml-2 md:ml-0 text-sm ${statusColor(transaction.status_transaksi)} p-1 md:py-2 md:px-6 rounded-lg w-max\">\n        <p class=\"hidden md:inline\">${transaction.status_transaksi}</p>\n        <p class=\"inline md:hidden\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.5\" d=\"${renderStatusIcon(transaction.status_transaksi)}\"></path></svg></p>\n        </div>\n      </td>\n      <td class=\"bg-white rounded-r-lg justify-end flex p-3 pl-0\">\n        <button class=\"w-8 md:p-2 md:w-12 h-12 text-gray-700\" id=\"settings\">\n          <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\">\n            </path>\n          </svg>\n        </button>\n        <div id=\"settings-dropdown\"\n          class=\"hidden absolute mt-10 w-56 rounded-lg shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\n          <div class=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n          <p id=\"reminder-element-${transaction.id_transaksi}\"></p>\n            ${getStatusAction(transaction.status_transaksi)}\n          </div>\n        </div>\n      </td>\n    </tr>\n    <tr class=\"h-4\"></tr>`\n    }\n\n    tableBody.innerHTML = `\n      <tr class=\"text-left text-gray-700\">\n        <th class=\"font-normal p-5 pr-0 pt-0\">Tanggal</th>\n        <th class=\"font-normal pb-5 pt-0 hidden lg:table-cell\">ID Transaksi</th>\n        <th class=\"font-normal pb-5 pt-0\">Nominal</th>\n        <th class=\"font-normal pb-5 pt-0 hidden lg:table-cell\">Metode</th>\n        <th class=\"font-normal pb-5 pt-0 hidden lg:table-cell\">Jenis</th>\n        <th class=\"font-normal pb-5 pt-0\">Status</th>\n        <th class=\"font-normal pb-5 pt-0 justify-end\"></th>\n      </tr>`\n    transactionData.forEach((transaction) => {\n      tableBody.innerHTML += transactionTemplate(transaction)\n    })\n    this._createTableEvent()\n  },\n\n  async _createTableEvent() {\n    const searchInput = document.getElementById('search-input')\n    const table = document.getElementById('transaction-table')\n\n    searchInput.addEventListener('keyup', (event) => {\n      const filter = event.target.value.toUpperCase()\n      const transaction = table.querySelectorAll('tr[class*=\"hover:shadow-lg\"]')\n      event.preventDefault()\n\n      transaction.forEach((row) => {\n        const rowData = row.querySelectorAll('td')\n        if (rowData.length) {\n          const textArray = []\n          rowData.forEach((data) => {\n            textArray.push(data.textContent.toUpperCase() || data.innerText.toUpperCase())\n          })\n          const textValue = textArray.toString()\n          if (textValue.indexOf(filter) > -1) {\n            row.style.display = ''\n          } else {\n            row.style.display = 'none'\n          }\n        }\n      })\n    })\n  },\n\n}\n\nexport default Report\n","/* eslint-disable max-len */\n/* eslint-disable no-undef */\nimport APIData from '../../../data/api-data'\nimport ModalInitializer from '../../../utils/modal-initializer'\nimport formValidation from '../../../helper/form-validation'\nimport EventHelper from '../../../helper/event-helper'\nimport DateFormater from '../../../helper/date-formater'\n\nconst Transaction = {\n  async render() {\n    return /* html */`\n        <div class=\"text-center\">\n          <p class=\"text-xl leading-8 font-bold tracking-tight text-gray-800 md:text-2xl md:mt-2\">\n            Transaksi\n          </p>\n        </div>\n        <div class=\"flex flex-col w-full md:w-8/12 lg:w-6/12 mx-auto\">\n          <div class=\"bg-gray-200 p-5 rounded-lg flex flex-col mt-4 md:p-8 md:mt-6\">\n            <div class=\"flex flex-row mx-auto mb-4\">\n            <button id=\"pemasukan-option\" disabled class=\"w-max bg-primary text-white py-3 px-10 rounded-lg rounded-r-none disabled:bg-white disabled:text-gray-500 disabled:cursor-default\">Isi Saldo</button>\n              <button id=\"penarikan-option\" class=\"w-max bg-primary text-white py-3 px-10 rounded-lg rounded-l-none disabled:bg-white disabled:text-gray-500 disabled:cursor-default\">Tarik Saldo</button>\n            </div>\n            <div class=\"flex-1 py-0 white rounded-lg\">\n            <div class=\"mb-6\">\n              <p class=\"mb-2\">Nominal</p>\n              <input id=\"input-nominal\" name=\"Nominal\" data-rule=\"required value-more-than-999 multiple-of-1000\" value=\"\" type=\"number\" class=\"block px-5 py-3 rounded-lg w-full bg-white\">\n            </div>\n              <div class=\"flex flex-col gap-6 items-center\">\n                <button id=\"luring-option\" class=\"flex-1 p-5 pb-8 border-2 border-primary bg-white shadow-lg rounded-lg w-full focus:outline-none \">\n                  <div class=\"flex md:justify-center\">\n                    <div class=\"text-white flex flex-1 flex-row\">\n                      <div data-option class=\"mx-2 my-auto text-sm bg-primary text-white p-1 rounded-lg\">\n                      <p><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.5\" d=\"M5 13l4 4L19 7\"></path></svg></p>\n                      </div>\n                      <div class=\"flex flex-col flex-1 text-left ml-4\">\n                        <p class=\"md:-mb-2 text-gray-700\">Pembayaran secara luring</p>\n                        <p id=\"monthly-withdraw\" class=\"text-gray-800 text-2xl lg:text-4xl font-bold\">Melalui Admin/TU</p>\n                        <p id=\"weekly-withdraw\" class=\"font-bold text-sm text-gray-400 mt-3\" href=\"\">TIDAK DIPUNGUT BIAYA ADMIN</p>\n                      </div>\n                    </div>\n                  </div>\n                </button>\n                <button id=\"daring-option\" class=\"flex-1 p-5 pb-8 bg-white shadow-lg rounded-lg w-full focus:outline-none \">\n                  <div class=\"flex md:justify-center\">\n                    <div class=\"text-white flex flex-1 flex-row\">\n                      <div data-option class=\"mx-2 my-auto text-sm bg-gray-200 text-gray-200 p-1 rounded-lg\">\n                      <p><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.5\" d=\"M5 13l4 4L19 7\"></path></svg></p>\n                      </div>\n                      <div class=\"flex flex-col flex-1 text-left ml-4\">\n                        <p class=\"md:-mb-1 text-gray-700\">Pembayaran secara daring</p>\n                        <p id=\"monthly-withdraw\" class=\"text-gray-800 text-xl md:text-2xl font-bold lg:mr-8\">Melalui e-Wallets, Bank, Indomaret, dll</p>\n                        <p id=\"weekly-withdraw\" class=\"font-bold text-sm text-gray-400 mt-3\" href=\"\">TIDAK DIPUNGUT BIAYA TAMBAHAN</p>\n                      </div>\n                    </div>\n                  </div>\n                </button>\n              </div>\n            </div>\n            </div>\n            <button disabled id=\"next-button\" class=\"disabled:cursor-default w-max bg-primary text-white py-3 px-8 rounded-lg disabled:opacity-50 mx-auto mt-4\">Lanjut</button>\n            </div>\n        </div>\n      `\n  },\n\n  async afterRender() {\n    const responseData = await APIData.retrieveUser()\n    this._userId = responseData.id\n    const userAccount = await APIData.getAkunSiswa(this._userId)\n    this._userAccount = userAccount\n    this._ballance = userAccount.saldo\n    this._transactionOption = 'pemasukan'\n    this._paymentOption = 'luring'\n\n    const paymentOptionButton = document.querySelectorAll('#daring-option, #luring-option')\n    const transactionOptionButton = document.querySelectorAll('#penarikan-option, #pemasukan-option')\n    const nominalInput = document.getElementById('input-nominal')\n    const nextButton = document.getElementById('next-button')\n\n    formValidation.init({\n      formInputs: nominalInput,\n      submitButton: nextButton,\n    })\n\n    transactionOptionButton.forEach((option) => {\n      option.addEventListener('click', () => {\n        this._selectTransactionOption(transactionOptionButton, option.id)\n        if (this._transactionOption === 'penarikan') {\n          nominalInput.dataset.rule += ` cannot-more-than-${this._ballance}`\n          this._selectPaymentOption(paymentOptionButton, paymentOptionButton[0].id)\n          paymentOptionButton[1].style.display = 'none'\n        } else {\n          nominalInput.dataset.rule = 'required value-more-than-999 multiple-of-1000'\n          paymentOptionButton[1].style.display = ''\n        }\n        EventHelper.triggerEvent(nominalInput, 'keyup')\n      })\n    })\n\n    paymentOptionButton.forEach((option) => {\n      option.addEventListener('click', () => {\n        this._selectPaymentOption(paymentOptionButton, option.id)\n      })\n    })\n\n    nextButton.addEventListener('click', async () => {\n      try {\n        const transactionData = {\n          nisn: this._userId,\n          nominal: nominalInput.value,\n          jenis_transaksi: this._transactionOption,\n          metode_pembayaran: this._paymentOption,\n        }\n\n        const response = await APIData.createTransaction(transactionData)\n        console.log(response)\n\n        if (this._paymentOption === 'luring') this._adminPaymentInit(response)\n        else this._midtransPaymentInit(response)\n      } catch (error) {\n        console.log(error)\n      }\n    })\n  },\n\n  async _midtransPaymentInit(transactionData) {\n    snap.show()\n    const dataResponse = transactionData.response\n    const userData = await APIData.getDataSiswa(this._userId)\n\n    const data = {\n      transaction_details: {\n        order_id: dataResponse.id_transaksi,\n        gross_amount: dataResponse.nominal,\n      },\n      item_details: [{\n        id: dataResponse.id_transaksi,\n        price: dataResponse.nominal,\n        quantity: 1,\n        name: `${dataResponse.jenis_transaksi.charAt(0).toUpperCase() + dataResponse.jenis_transaksi.slice(1)} Saldo`,\n        brand: 'Celenganku',\n      }],\n      customer_details: {\n        first_name: userData.nama,\n        email: this._userAccount.email,\n      },\n      callbacks: {\n        finish: '/',\n      },\n    }\n    const response = await APIData.getMidtransToken(data)\n    await APIData.updateTransaction(dataResponse.id_transaksi, {\n      token: response.token,\n    })\n    snap.pay(response.token, {\n      onSuccess: async () => {\n        await APIData.updateTransaction(dataResponse.id_transaksi, {\n          status_transaksi: 'selesai',\n        })\n        await APIData.updateSaldo(dataResponse.nisn, dataResponse.nominal, dataResponse.jenis_transaksi)\n        window.location.hash = '#'\n      },\n      onPending() {\n        /* You may add your own implementation here */\n        window.location.hash = '#'\n      },\n      onClose() {\n        window.location.hash = '#'\n      },\n    })\n  },\n\n  _selectTransactionOption(optionButton, optionId) {\n    optionButton.forEach((option) => {\n      if (option.id === optionId) {\n        option.disabled = true\n      } else {\n        option.disabled = false\n      }\n    })\n    this._transactionOption = optionId.replace('-option', '')\n  },\n\n  _adminPaymentInit(transaction) {\n    window.location.hash = '#'\n    ModalInitializer.init({\n      title: 'Kode Transaksi',\n      content:\n      `<div class=\"px-10 py-6\">\n        <div class=\"preloader p-4 flex justify-center m-auto\">\n          <div class=\"loader loader-mini ease-linear rounded-full border-8 border-t-8 border-gray-200\"></div>\n        </div>\n        <div class=\"hidden\" id=\"modal-content\">\n          <p class=\"mt-2 mb-1\">Kode Transaksi kamu adalah</p>\n          <div class=\"flex flex-row\">\n            <p id=\"id-transaksi\" class=\"my-2 text-3xl select-all font-bold\">${transaction.response.id_transaksi}</p>\n            <button role=\"button\" id=\"copy-button\" class=\"w-max text-primary ml-2 font-light p-2\">\n            <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\"></path></svg>\n            </button>\n          </div>\n          <p class=\"mt-4 text-gray-500\">Transaksi ini akan automatis dibatalkan dalam</p>\n          <p id=\"time-count\" class=\"mt-1 text-primary\"></p>\n        </div>\n        <div class=\"flex justify-end items-center w-100 mt-4\">\n          <button role=\"button\" id=\"show-qr-button\" class=\"w-max text-primary mx-1 font-light p-2\">\n          <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"></path></svg></button>\n          <button role=\"button\" id=\"close-button\" class=\"w-max bg-primary text-white mx-1 py-3 px-8 rounded-lg disabled:opacity-50\">Tutup</button>\n        </div>\n      </div>`,\n    })\n    const preloader = document.querySelector('.preloader')\n    const modal = document.getElementById('modal-kode-transaksi')\n    const modalContent = document.getElementById('modal-content')\n    const thisContent = modalContent.innerHTML\n    const qrContent = `<img class=\"mx-auto\" src=\"https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${transaction.response.id_transaksi}\"></img>`\n    const showQRButton = document.getElementById('show-qr-button')\n    const closeButton = document.getElementById('close-button')\n    const copyButton = document.getElementById('copy-button')\n    const copyText = document.getElementById('id-transaksi')\n    copyButton.addEventListener('click', () => {\n      EventHelper.copyTextToClipboard(transaction.response.id_transaksi)\n      copyText.focus()\n    })\n\n    const timeStamp = new Date(transaction.response.tenggat_waktu_pembayaran.seconds * 1000)\n    const timeCountInterval = setInterval(() => {\n      try {\n        const timeCounter = document.getElementById('time-count')\n        const {\n          hours, minutes, seconds,\n        } = DateFormater.getTimeCounter(timeStamp)\n        const counterText = `${hours} jam ${minutes} menit ${seconds} detik`\n        timeCounter.innerHTML = counterText\n      } catch (error) {\n        // console.log(error)\n      }\n    }, 1000)\n\n    this._toggleQR = false\n    showQRButton.addEventListener('click', (event) => {\n      event.stopPropagation()\n      this._toggleQR = !this._toggleQR\n      if (this._toggleQR) modalContent.innerHTML = qrContent\n      else modalContent.innerHTML = thisContent\n    })\n    closeButton.addEventListener('click', () => {\n      modal.remove()\n      clearInterval(timeCountInterval)\n    })\n\n    setTimeout(() => {\n      preloader.remove()\n      modalContent.classList.remove('hidden')\n    }, 500)\n  },\n\n  _selectPaymentOption(optionButton, optionId) {\n    window.scrollTo(0, document.body.scrollHeight)\n    const selectedClass = 'mx-2 my-auto text-sm bg-primary text-white p-1 rounded-lg'\n    const nonSelectedClass = 'mx-2 my-auto text-sm bg-gray-200 text-gray-200 p-1 rounded-lg'\n    optionButton.forEach((option) => {\n      const optionIcon = option.querySelector('div[data-option]')\n      if (option.id === optionId) {\n        option.classList.add('border-2', 'border-primary')\n        optionIcon.className = selectedClass\n      } else {\n        option.classList.remove('border-2', 'border-primary')\n        optionIcon.className = nonSelectedClass\n      }\n    })\n    this._paymentOption = optionId.replace('-option', '')\n  },\n}\n\nexport default Transaction\n"],"sourceRoot":""}