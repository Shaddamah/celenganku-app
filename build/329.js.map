{"version":3,"sources":["webpack://celenganku-app/./node_modules/raf/index.js","webpack://celenganku-app/./node_modules/rgbcolor/index.js","webpack://celenganku-app/./node_modules/stackblur-canvas/dist/stackblur-es.js","webpack://celenganku-app/../src/SVGPathDataEncoder.ts","webpack://celenganku-app/../src/mathUtils.ts","webpack://celenganku-app/../src/SVGPathDataTransformer.ts","webpack://celenganku-app/../src/TransformableSVG.ts","webpack://celenganku-app/../src/SVGPathDataParser.ts","webpack://celenganku-app/../src/SVGPathData.ts"],"names":["now","require","root","window","global","vendors","suffix","raf","caf","i","length","last","id","queue","frameDuration","callback","_now","next","Math","max","setTimeout","cp","slice","cancelled","e","round","push","handle","module","exports","fn","call","cancel","apply","arguments","polyfill","object","requestAnimationFrame","cancelAnimationFrame","color_string","this","ok","alpha","charAt","substr","replace","toLowerCase","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","process","bits","parseInt","parseFloat","processor","exec","channels","r","g","b","isNaN","toRGB","toRGBA","toHex","toString","getHelpXML","examples","Array","j","sc","xml","document","createElement","setAttribute","list_item","list_color","RGBColor","example_div","style","cssText","appendChild","createTextNode","list_item_value","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","mulTable","shgTable","processImage","img","canvas","radius","blurAlphaChannel","useOffset","skipStyles","getElementById","dimensionType","w","h","width","height","context","getContext","clearRect","drawImage","naturalWidth","naturalHeight","processCanvasRGBA","processCanvasRGB","getImageDataFromCanvas","topX","topY","getImageData","Error","imageData","processImageDataRGBA","putImageData","pixels","data","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","stackEnd","stackIn","stackOut","yw","yi","mulSum","shgSum","y","pr","pg","pb","pa","_i","a","rInSum","gInSum","bInSum","aInSum","rOutSum","gOutSum","bOutSum","aOutSum","rSum","gSum","bSum","aSum","_i2","p","rbs","x","paInitial","_a2","_p","_stackOut","_r","_g","_b","_a","_x","_pr","_pg","_pb","_pa","_rOutSum","_gOutSum","_bOutSum","_aOutSum","_rSum","_gSum","_bSum","_aSum","_i3","yp","_gInSum","_bInSum","_aInSum","_rInSum","_i4","_rbs","_y","_p2","processImageDataRGB","_i5","_i6","_x2","_pr2","_pg2","_pb2","_rOutSum2","_gOutSum2","_bOutSum2","_rSum2","_gSum2","_bSum2","_i7","_rInSum2","_gInSum2","_bInSum2","_i8","_y2","encodeSVGPath","commands","str","isArray","command","type","SVGPathData","CLOSE_PATH","HORIZ_LINE_TO","relative","VERT_LINE_TO","MOVE_TO","LINE_TO","CURVE_TO","x1","y1","x2","y2","SMOOTH_CURVE_TO","QUAD_TO","SMOOTH_QUAD_TO","ARC","rX","rY","xRot","lArcFlag","sweepFlag","rotate","rad","cos","sin","assertNumbers","numbers","PI","annotateArcCommand","c","abs","x1_","y1_","testValue","pow","sqrt","c_ScaleTemp","c_Scale","cx_","cy_","cRot","cX","cY","phi1","atan2","phi2","intersectionUnitCircleLine","termSqr","term","SVGPathDataTransformer","DEG","lerp","t","arcAt","phiDeg","bezierRoot","x0","x3","x01","x12","q","PRECISION","discriminantX4","bezierAt","s","TO_ABS","INFO","prevX","prevY","NORMALIZE_ST","prevCurveC2X","NaN","prevCurveC2Y","prevQuadCX","prevQuadCY","QT_TO_C","prevQuadX1","prevQuadY1","f","prevXAbs","prevYAbs","pathStartXAbs","pathStartYAbs","result","MATRIX","d","pathStartX","origX1","origX2","comRel","sqr","det","sinRot","cosRot","xCurve","yCurve","A","B","C","A1","B1","C1","newXRot","newSinRot","newCosRot","CLONE","key","roundVal","rf","val","normalizeZ","normalizeH","normalizeV","pathStartY","EPS","skip","x1Rel","y1Rel","LINE_COMMANDS","xRel","yRel","x2Rel","y2Rel","dX","dY","atan","xOffset","yOffset","arc","y0","phiMin","min","deltaPhi","partCount","ceil","phiStart","phiEnd","deltaPhi_1","_e","_f","transform","xTemp","yTemp","_c","_d","clone","toAbs","qtToC","normST","fixX","absX","maxX","minX","fixY","absY","maxY","minY","DRAWING_COMMANDS","xDerivRoots_1","derivRoot","yDerivRoots_1","xRotRad","x90","y90","phiMin_1","phiMax","normalizeXiEta","xi","eta","phi","xDerivRoots_2","map","yDerivRoots_2","Infinity","TransformableSVG","ROUND","TO_REL","NORMALIZE_HVZ","A_TO_C","eps","SANITIZE","TRANSLATE","SCALE","ROTATE","SKEW_X","SKEW_Y","X_AXIS_SYMMETRY","Y_AXIS_SYMMETRY","ANNOTATE_ARCS","isWhiteSpace","isDigit","charCodeAt","_super","_this","__extends","SVGPathDataParser","parse","curArgs","canParseCommandOrComma","SyntaxError","finishCommand","isAArcFlag","curCommandType","curNumber","isEndingDigit","curNumberHasExp","curNumberHasExpDigits","curNumberHasDecimal","Number","COMMAND_ARG_COUNTS","curCommandRelative","Object","create","value","chunk","parsedCommands_1","getPrototypeOf","cT","content","encode","boundsTransform","CALCULATE_BOUNDS","transformFunction","newCommands","transformedCommand","path","parser","finish"],"mappings":"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","file":"329.js","sourcesContent":["var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\n\nmodule.exports = function(color_string) {\n    this.ok = false;\n    this.alpha = 1.0;\n\n    // strip any leading #\n    if (color_string.charAt(0) == '#') { // remove # if any\n        color_string = color_string.substr(1,6);\n    }\n\n    color_string = color_string.replace(/ /g,'');\n    color_string = color_string.toLowerCase();\n\n    // before getting into regexps, try simple matches\n    // and overwrite the input\n    var simple_colors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '00ffff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000000',\n        blanchedalmond: 'ffebcd',\n        blue: '0000ff',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '00ffff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dodgerblue: '1e90ff',\n        feldspar: 'd19275',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'ff00ff',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred : 'cd5c5c',\n        indigo : '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslateblue: '8470ff',\n        lightslategray: '778899',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '00ff00',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'ff00ff',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '663399',\n        red: 'ff0000',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        violetred: 'd02090',\n        wheat: 'f5deb3',\n        white: 'ffffff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ffff00',\n        yellowgreen: '9acd32'\n    };\n    color_string = simple_colors[color_string] || color_string;\n    // emd of simple type-in colors\n\n    // array of color definition objects\n    var color_defs = [\n        {\n            re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n            example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3]),\n                    parseFloat(bits[4])\n                ];\n            }\n        },\n        {\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3])\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n            example: ['#00ff00', '336699'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1], 16),\n                    parseInt(bits[2], 16),\n                    parseInt(bits[3], 16)\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n            example: ['#fb0', 'f0f'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1] + bits[1], 16),\n                    parseInt(bits[2] + bits[2], 16),\n                    parseInt(bits[3] + bits[3], 16)\n                ];\n            }\n        }\n    ];\n\n    // search through the definitions to find a match\n    for (var i = 0; i < color_defs.length; i++) {\n        var re = color_defs[i].re;\n        var processor = color_defs[i].process;\n        var bits = re.exec(color_string);\n        if (bits) {\n            var channels = processor(bits);\n            this.r = channels[0];\n            this.g = channels[1];\n            this.b = channels[2];\n            if (channels.length > 3) {\n                this.alpha = channels[3];\n            }\n            this.ok = true;\n        }\n\n    }\n\n    // validate/cleanup values\n    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\n    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\n    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\n    this.alpha = (this.alpha < 0) ? 0 : ((this.alpha > 1.0 || isNaN(this.alpha)) ? 1.0 : this.alpha);\n\n    // some getters\n    this.toRGB = function () {\n        return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n    }\n    this.toRGBA = function () {\n        return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n    }\n    this.toHex = function () {\n        var r = this.r.toString(16);\n        var g = this.g.toString(16);\n        var b = this.b.toString(16);\n        if (r.length == 1) r = '0' + r;\n        if (g.length == 1) g = '0' + g;\n        if (b.length == 1) b = '0' + b;\n        return '#' + r + g + b;\n    }\n\n    // help\n    this.getHelpXML = function () {\n\n        var examples = new Array();\n        // add regexps\n        for (var i = 0; i < color_defs.length; i++) {\n            var example = color_defs[i].example;\n            for (var j = 0; j < example.length; j++) {\n                examples[examples.length] = example[j];\n            }\n        }\n        // add type-in colors\n        for (var sc in simple_colors) {\n            examples[examples.length] = sc;\n        }\n\n        var xml = document.createElement('ul');\n        xml.setAttribute('id', 'rgbcolor-examples');\n        for (var i = 0; i < examples.length; i++) {\n            try {\n                var list_item = document.createElement('li');\n                var list_color = new RGBColor(examples[i]);\n                var example_div = document.createElement('div');\n                example_div.style.cssText =\n                        'margin: 3px; '\n                        + 'border: 1px solid black; '\n                        + 'background:' + list_color.toHex() + '; '\n                        + 'color:' + list_color.toHex()\n                ;\n                example_div.appendChild(document.createTextNode('test'));\n                var list_item_value = document.createTextNode(\n                    ' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex()\n                );\n                list_item.appendChild(example_div);\n                list_item.appendChild(list_item_value);\n                xml.appendChild(list_item);\n\n            } catch(e){}\n        }\n        return xml;\n\n    }\n\n}\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise -- used for calculations */\n\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffset\n * @param {boolean} skipStyles\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel, useOffset, skipStyles) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || !('naturalWidth' in img)) {\n    return;\n  }\n\n  var dimensionType = useOffset ? 'offset' : 'natural';\n  var w = img[dimensionType + 'Width'];\n  var h = img[dimensionType + 'Height'];\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  if (!skipStyles) {\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null,\n      stackOut = null,\n      yw = 0,\n      yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (var y = 0; y < height; y++) {\n    stack = stackStart;\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        pa = pixels[yi + 3];\n\n    for (var _i = 0; _i < radiusPlus1; _i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0,\n        aInSum = 0,\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        aOutSum = radiusPlus1 * pa,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb,\n        aSum = sumFactor * pa;\n\n    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {\n      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);\n      var r = pixels[p],\n          g = pixels[p + 1],\n          b = pixels[p + 2],\n          a = pixels[p + 3];\n      var rbs = radiusPlus1 - _i2;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      var paInitial = aSum * mulSum >> shgSum;\n      pixels[yi + 3] = paInitial;\n\n      if (paInitial !== 0) {\n        var _a2 = 255 / paInitial;\n\n        pixels[yi] = (rSum * mulSum >> shgSum) * _a2;\n        pixels[yi + 1] = (gSum * mulSum >> shgSum) * _a2;\n        pixels[yi + 2] = (bSum * mulSum >> shgSum) * _a2;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      var _p = x + radius + 1;\n\n      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[_p];\n      gInSum += stackIn.g = pixels[_p + 1];\n      bInSum += stackIn.b = pixels[_p + 2];\n      aInSum += stackIn.a = pixels[_p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      var _stackOut = stackOut,\n          _r = _stackOut.r,\n          _g = _stackOut.g,\n          _b = _stackOut.b,\n          _a = _stackOut.a;\n      rOutSum += _r;\n      gOutSum += _g;\n      bOutSum += _b;\n      aOutSum += _a;\n      rInSum -= _r;\n      gInSum -= _g;\n      bInSum -= _b;\n      aInSum -= _a;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x = 0; _x < width; _x++) {\n    yi = _x << 2;\n\n    var _pr = pixels[yi],\n        _pg = pixels[yi + 1],\n        _pb = pixels[yi + 2],\n        _pa = pixels[yi + 3],\n        _rOutSum = radiusPlus1 * _pr,\n        _gOutSum = radiusPlus1 * _pg,\n        _bOutSum = radiusPlus1 * _pb,\n        _aOutSum = radiusPlus1 * _pa,\n        _rSum = sumFactor * _pr,\n        _gSum = sumFactor * _pg,\n        _bSum = sumFactor * _pb,\n        _aSum = sumFactor * _pa;\n\n    stack = stackStart;\n\n    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {\n      stack.r = _pr;\n      stack.g = _pg;\n      stack.b = _pb;\n      stack.a = _pa;\n      stack = stack.next;\n    }\n\n    var yp = width;\n    var _gInSum = 0,\n        _bInSum = 0,\n        _aInSum = 0,\n        _rInSum = 0;\n\n    for (var _i4 = 1; _i4 <= radius; _i4++) {\n      yi = yp + _x << 2;\n\n      var _rbs = radiusPlus1 - _i4;\n\n      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;\n      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;\n      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;\n      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;\n      _rInSum += _pr;\n      _gInSum += _pg;\n      _bInSum += _pb;\n      _aInSum += _pa;\n      stack = stack.next;\n\n      if (_i4 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y = 0; _y < height; _y++) {\n      var _p2 = yi << 2;\n\n      pixels[_p2 + 3] = _pa = _aSum * mulSum >> shgSum;\n\n      if (_pa > 0) {\n        _pa = 255 / _pa;\n        pixels[_p2] = (_rSum * mulSum >> shgSum) * _pa;\n        pixels[_p2 + 1] = (_gSum * mulSum >> shgSum) * _pa;\n        pixels[_p2 + 2] = (_bSum * mulSum >> shgSum) * _pa;\n      } else {\n        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;\n      }\n\n      _rSum -= _rOutSum;\n      _gSum -= _gOutSum;\n      _bSum -= _bOutSum;\n      _aSum -= _aOutSum;\n      _rOutSum -= stackIn.r;\n      _gOutSum -= stackIn.g;\n      _bOutSum -= stackIn.b;\n      _aOutSum -= stackIn.a;\n      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;\n      _rSum += _rInSum += stackIn.r = pixels[_p2];\n      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];\n      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];\n      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];\n      stackIn = stackIn.next;\n      _rOutSum += _pr = stackOut.r;\n      _gOutSum += _pg = stackOut.g;\n      _bOutSum += _pb = stackOut.b;\n      _aOutSum += _pa = stackOut.a;\n      _rInSum -= _pr;\n      _gInSum -= _pg;\n      _bInSum -= _pb;\n      _aInSum -= _pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  var p, rbs;\n  var yw = 0,\n      yi = 0;\n\n  for (var y = 0; y < height; y++) {\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb;\n    stack = stackStart;\n\n    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0;\n\n    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {\n      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >> shgSum;\n      pixels[yi + 1] = gSum * mulSum >> shgSum;\n      pixels[yi + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x2 = 0; _x2 < width; _x2++) {\n    yi = _x2 << 2;\n\n    var _pr2 = pixels[yi],\n        _pg2 = pixels[yi + 1],\n        _pb2 = pixels[yi + 2],\n        _rOutSum2 = radiusPlus1 * _pr2,\n        _gOutSum2 = radiusPlus1 * _pg2,\n        _bOutSum2 = radiusPlus1 * _pb2,\n        _rSum2 = sumFactor * _pr2,\n        _gSum2 = sumFactor * _pg2,\n        _bSum2 = sumFactor * _pb2;\n\n    stack = stackStart;\n\n    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {\n      stack.r = _pr2;\n      stack.g = _pg2;\n      stack.b = _pb2;\n      stack = stack.next;\n    }\n\n    var _rInSum2 = 0,\n        _gInSum2 = 0,\n        _bInSum2 = 0;\n\n    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n      yi = yp + _x2 << 2;\n      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;\n      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;\n      _rInSum2 += _pr2;\n      _gInSum2 += _pg2;\n      _bInSum2 += _pb2;\n      stack = stack.next;\n\n      if (_i8 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x2;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y2 = 0; _y2 < height; _y2++) {\n      p = yi << 2;\n      pixels[p] = _rSum2 * mulSum >> shgSum;\n      pixels[p + 1] = _gSum2 * mulSum >> shgSum;\n      pixels[p + 2] = _bSum2 * mulSum >> shgSum;\n      _rSum2 -= _rOutSum2;\n      _gSum2 -= _gOutSum2;\n      _bSum2 -= _bOutSum2;\n      _rOutSum2 -= stackIn.r;\n      _gOutSum2 -= stackIn.g;\n      _bOutSum2 -= stackIn.b;\n      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];\n      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      _rOutSum2 += _pr2 = stackOut.r;\n      _gOutSum2 += _pg2 = stackOut.g;\n      _bOutSum2 += _pb2 = stackOut.b;\n      _rInSum2 -= _pr2;\n      _gInSum2 -= _pg2;\n      _bInSum2 -= _pb2;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };\n","import { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand } from \"./types\";\n\n// Encode SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\n// Private consts : Char groups\nconst WSP = \" \";\n\nexport function encodeSVGPath(commands: SVGCommand | SVGCommand[]) {\n  let str = \"\";\n\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    if (command.type === SVGPathData.CLOSE_PATH) {\n      str += \"z\";\n    } else if (command.type === SVGPathData.HORIZ_LINE_TO) {\n      str += (command.relative ? \"h\" : \"H\") +\n        command.x;\n    } else if (command.type === SVGPathData.VERT_LINE_TO) {\n      str += (command.relative ? \"v\" : \"V\") +\n        command.y;\n    } else if (command.type === SVGPathData.MOVE_TO) {\n      str += (command.relative ? \"m\" : \"M\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.LINE_TO) {\n      str += (command.relative ? \"l\" : \"L\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.CURVE_TO) {\n      str += (command.relative ? \"c\" : \"C\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_CURVE_TO) {\n      str += (command.relative ? \"s\" : \"S\") +\n        command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.QUAD_TO) {\n      str += (command.relative ? \"q\" : \"Q\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_QUAD_TO) {\n      str += (command.relative ? \"t\" : \"T\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.ARC) {\n      str += (command.relative ? \"a\" : \"A\") +\n        command.rX + WSP + command.rY +\n        WSP + command.xRot +\n        WSP + (+command.lArcFlag) + WSP + (+command.sweepFlag) +\n        WSP + command.x + WSP + command.y;\n    } else {\n      // Unknown command\n      throw new Error(\n        `Unexpected command type \"${ (command as any).type}\" at index ${i}.`);\n    }\n  }\n\n  return str;\n}\n","import { SVGPathData } from \"./SVGPathData\";\nimport { CommandA, CommandC } from \"./types\";\n\nexport function rotate([x, y]: [number, number], rad: number) {\n  return [\n    x * Math.cos(rad) - y * Math.sin(rad),\n    x * Math.sin(rad) + y * Math.cos(rad),\n  ];\n}\n\nconst DEBUG_CHECK_NUMBERS = true;\nexport function assertNumbers(...numbers: number[]) {\n  if (DEBUG_CHECK_NUMBERS) {\n    for (let i = 0; i < numbers.length; i++) {\n      if (\"number\" !== typeof numbers[i]) {\n        throw new Error(\n          `assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`);\n      }\n    }\n  }\n  return true;\n}\n\nconst PI = Math.PI;\n\n/**\n * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n * Fixes rX and rY.\n * Ensures lArcFlag and sweepFlag are 0 or 1\n * Adds center coordinates: command.cX, command.cY (relative or absolute, depending on command.relative)\n * Adds start and end arc parameters (in degrees): command.phi1, command.phi2; phi1 < phi2 iff. c.sweepFlag == true\n */\nexport function annotateArcCommand(c: CommandA, x1: number, y1: number) {\n  c.lArcFlag = (0 === c.lArcFlag) ? 0 : 1;\n  c.sweepFlag = (0 === c.sweepFlag) ? 0 : 1;\n  // tslint:disable-next-line\n  let {rX, rY, x, y} = c;\n\n  rX = Math.abs(c.rX);\n  rY = Math.abs(c.rY);\n  const [x1_, y1_] = rotate([(x1 - x) / 2, (y1 - y) / 2], -c.xRot / 180 * PI);\n  const testValue = Math.pow(x1_, 2) / Math.pow(rX, 2) + Math.pow(y1_, 2) / Math.pow(rY, 2);\n\n  if (1 < testValue) {\n    rX *= Math.sqrt(testValue);\n    rY *= Math.sqrt(testValue);\n  }\n  c.rX = rX;\n  c.rY = rY;\n  const c_ScaleTemp = (Math.pow(rX, 2) * Math.pow(y1_, 2) + Math.pow(rY, 2) * Math.pow(x1_, 2));\n  const c_Scale = (c.lArcFlag !== c.sweepFlag ? 1 : -1) *\n    Math.sqrt(Math.max(0, (Math.pow(rX, 2) * Math.pow(rY, 2) - c_ScaleTemp) / c_ScaleTemp));\n  const cx_ = rX * y1_ / rY * c_Scale;\n  const cy_ = -rY * x1_ / rX * c_Scale;\n  const cRot = rotate([cx_, cy_], c.xRot / 180 * PI);\n\n  c.cX = cRot[0] + (x1 + x) / 2;\n  c.cY = cRot[1] + (y1 + y) / 2;\n  c.phi1 = Math.atan2((y1_ - cy_) / rY, (x1_ - cx_) / rX);\n  c.phi2 = Math.atan2((-y1_ - cy_) / rY, (-x1_ - cx_) / rX);\n  if (0 === c.sweepFlag && c.phi2 > c.phi1) {\n    c.phi2 -= 2 * PI;\n  }\n  if (1 === c.sweepFlag && c.phi2 < c.phi1) {\n    c.phi2 += 2 * PI;\n  }\n  c.phi1 *= 180 / PI;\n  c.phi2 *= 180 / PI;\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x² + y² = 1\n * This can be understood as the intersection of the unit circle with a line.\n *      => y = (c - a x) / b\n *      => x² + (c - a x)² / b² = 1\n *      => x² b² + c² - 2 c a x + a² x² = b²\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\n */\nexport function intersectionUnitCircleLine(a: number, b: number, c: number): [number, number][] {\n  assertNumbers(a, b, c);\n  // cf. pqFormula\n  const termSqr = a * a + b * b - c * c;\n\n  if (0 > termSqr) {\n    return [];\n  } else if (0 === termSqr) {\n    return [\n      [\n        (a * c) / (a * a + b * b),\n        (b * c) / (a * a + b * b)]];\n  }\n  const term = Math.sqrt(termSqr);\n\n  return [\n    [\n      (a * c + b * term) / (a * a + b * b),\n      (b * c - a * term) / (a * a + b * b)],\n    [\n      (a * c - b * term) / (a * a + b * b),\n      (b * c + a * term) / (a * a + b * b)]];\n\n}\n\nexport const DEG = Math.PI / 180;\n\nexport function lerp(a: number, b: number, t: number) {\n  return (1 - t) * a + t * b;\n}\n\nexport function arcAt(c: number, x1: number, x2: number, phiDeg: number) {\n  return c + Math.cos(phiDeg / 180 * PI) * x1 + Math.sin(phiDeg / 180 * PI) * x2;\n}\n\nexport function bezierRoot(x0: number, x1: number, x2: number, x3: number) {\n  const EPS = 1e-6;\n  const x01 = x1 - x0;\n  const x12 = x2 - x1;\n  const x23 = x3 - x2;\n  const a = 3 * x01 + 3 * x23 - 6 * x12;\n  const b = (x12 - x01) * 6;\n  const c = 3 * x01;\n  // solve a * t² + b * t + c = 0\n\n  if (Math.abs(a) < EPS) {\n    // equivalent to b * t + c =>\n    return [-c / b];\n  }\n  return pqFormula(b / a, c / a, EPS);\n\n}\n\nexport function bezierAt(x0: number, x1: number, x2: number, x3: number, t: number) {\n  // console.log(x0, y0, x1, y1, x2, y2, x3, y3, t)\n  const s = 1 - t;\n  const c0 = s * s * s;\n  const c1 = 3 * s * s * t;\n  const c2 = 3 * s * t * t;\n  const c3 = t * t * t;\n\n  return x0 * c0 + x1 * c1 + x2 * c2 + x3 * c3;\n}\n\nfunction pqFormula(p: number, q: number, PRECISION = 1e-6) {\n  // 4 times the discriminant:in\n  const discriminantX4 = p * p / 4 - q;\n\n  if (discriminantX4 < -PRECISION) {\n    return [];\n  } else if (discriminantX4 <= PRECISION) {\n    return [-p / 2];\n  }\n  const root = Math.sqrt(discriminantX4);\n\n  return [-(p / 2) - root, -(p / 2) + root];\n\n}\n\nexport function a2c(arc: CommandA, x0: number, y0: number): CommandC[] {\n  if (!arc.cX) {\n    annotateArcCommand(arc, x0, y0);\n  }\n\n  const phiMin = Math.min(arc.phi1!, arc.phi2!), phiMax = Math.max(arc.phi1!, arc.phi2!), deltaPhi = phiMax - phiMin;\n  const partCount = Math.ceil(deltaPhi / 90 );\n\n  const result: CommandC[] = new Array(partCount);\n  let prevX = x0, prevY = y0;\n  for (let i = 0; i < partCount; i++) {\n    const phiStart = lerp(arc.phi1!, arc.phi2!, i / partCount);\n    const phiEnd = lerp(arc.phi1!, arc.phi2!, (i + 1) / partCount);\n    const deltaPhi = phiEnd - phiStart;\n    const f = 4 / 3 * Math.tan(deltaPhi * DEG / 4);\n    // x1/y1, x2/y2 and x/y coordinates on the unit circle for phiStart/phiEnd\n    const [x1, y1] = [\n      Math.cos(phiStart * DEG) - f * Math.sin(phiStart * DEG),\n      Math.sin(phiStart * DEG) + f * Math.cos(phiStart * DEG)];\n    const [x, y] = [Math.cos(phiEnd * DEG), Math.sin(phiEnd * DEG)];\n    const [x2, y2] = [x + f * Math.sin(phiEnd * DEG), y - f * Math.cos(phiEnd * DEG)];\n    result[i] = {relative: arc.relative, type: SVGPathData.CURVE_TO } as any;\n    const transform = (x: number, y: number) => {\n      const [xTemp, yTemp] = rotate([x * arc.rX, y * arc.rY], arc.xRot);\n      return [arc.cX! + xTemp, arc.cY! + yTemp];\n    };\n    [result[i].x1, result[i].y1] = transform(x1, y1);\n    [result[i].x2, result[i].y2] = transform(x2, y2);\n    [result[i].x, result[i].y] = transform(x, y);\n    if (arc.relative) {\n      result[i].x1 -= prevX;\n      result[i].y1 -= prevY;\n      result[i].x2 -= prevX;\n      result[i].y2 -= prevY;\n      result[i].x -= prevX;\n      result[i].y -= prevY;\n    }\n    [prevX, prevY] = [result[i].x, result[i].y];\n  }\n  return result;\n}\n","// Transform SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\nimport { a2c, annotateArcCommand, arcAt, assertNumbers, bezierAt, bezierRoot,\n  intersectionUnitCircleLine } from \"./mathUtils\";\nimport { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n\nexport namespace SVGPathDataTransformer {\n  // Predefined transforming functions\n  // Rounds commands values\n  export function ROUND(roundVal = 1e13) {\n    assertNumbers(roundVal);\n    function rf(val: number) { return Math.round(val * roundVal) / roundVal; }\n    return function round(command: any) {\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = rf(command.x1);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = rf(command.y1);\n      }\n\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = rf(command.x2);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = rf(command.y2);\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = rf(command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = rf(command.y);\n      }\n\n      if (\"undefined\" !== typeof command.rX) {\n        command.rX = rf(command.rX);\n      }\n      if (\"undefined\" !== typeof command.rY) {\n        command.rY = rf(command.rY);\n      }\n\n      return command;\n    };\n  }\n  // Relative to absolute commands\n  export function TO_ABS() {\n    return INFO((command, prevX, prevY) => {\n      if (command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 += prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 += prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x += prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y += prevY;\n        }\n        command.relative = false;\n      }\n      return command;\n    });\n  }\n  // Absolute to relative commands\n  export function TO_REL() {\n    return INFO((command, prevX, prevY) => {\n      if (!command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 -= prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 -= prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y -= prevY;\n        }\n        command.relative = true;\n      }\n      return command;\n    });\n  }\n  // Convert H, V, Z and A with rX = 0 to L\n  export function NORMALIZE_HVZ(normalizeZ = true, normalizeH = true, normalizeV = true) {\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      if (isNaN(pathStartX) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n      if (normalizeH && command.type & SVGPathData.HORIZ_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (normalizeV && command.type & SVGPathData.VERT_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n      if (normalizeZ && command.type & SVGPathData.CLOSE_PATH) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? pathStartX - prevX : pathStartX;\n        command.y = command.relative ? pathStartY - prevY : pathStartY;\n      }\n      if (command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY)) {\n        command.type = SVGPathData.LINE_TO;\n        delete command.rX;\n        delete command.rY;\n        delete command.xRot;\n        delete command.lArcFlag;\n        delete command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  /*\n   * Transforms smooth curves and quads to normal curves and quads (SsTt to CcQq)\n   */\n  export function NORMALIZE_ST() {\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        command.type = SVGPathData.CURVE_TO;\n        prevCurveC2X = isNaN(prevCurveC2X) ? prevX : prevCurveC2X;\n        prevCurveC2Y = isNaN(prevCurveC2Y) ? prevY : prevCurveC2Y;\n        command.x1 = command.relative ? prevX - prevCurveC2X : 2 * prevX - prevCurveC2X;\n        command.y1 = command.relative ? prevY - prevCurveC2Y : 2 * prevY - prevCurveC2Y;\n      }\n      if (command.type & SVGPathData.CURVE_TO) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : prevQuadCY;\n        command.x1 = command.relative ? prevX - prevQuadCX : 2 * prevX - prevQuadCX;\n        command.y1 = command.relative ? prevY - prevQuadCY : 2 * prevY - prevQuadCY;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y1;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      return command;\n    });\n  }\n  /*\n   * A quadratic bézier curve can be represented by a cubic bézier curve which has\n   * the same end points as the quadratic and both control points in place of the\n   * quadratic\"s one.\n   *\n   * This transformer replaces QqTt commands with Cc commands respectively.\n   * This is useful for reading path data into a system which only has a\n   * representation for cubic curves.\n   */\n  export function QT_TO_C() {\n    let prevQuadX1 = NaN;\n    let prevQuadY1 = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadX1 = isNaN(prevQuadX1) ? prevX : prevQuadX1;\n        prevQuadY1 = isNaN(prevQuadY1) ? prevY : prevQuadY1;\n        command.x1 = command.relative ? prevX - prevQuadX1 : 2 * prevX - prevQuadX1;\n        command.y1 = command.relative ? prevY - prevQuadY1 : 2 * prevY - prevQuadY1;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadX1 = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadY1 = command.relative ? prevY + command.y1 : command.y1;\n        const x1 = command.x1;\n        const y1 = command.y1;\n\n        command.type = SVGPathData.CURVE_TO;\n        command.x1 = ((command.relative ? 0 : prevX) + x1 * 2) / 3;\n        command.y1 = ((command.relative ? 0 : prevY) + y1 * 2) / 3;\n        command.x2 = (command.x + x1 * 2) / 3;\n        command.y2 = (command.y + y1 * 2) / 3;\n      } else {\n        prevQuadX1 = NaN;\n        prevQuadY1 = NaN;\n      }\n\n      return command;\n    });\n  }\n  export function INFO(\n    f: (command: any, prevXAbs: number, prevYAbs: number,\n        pathStartXAbs: number, pathStartYAbs: number) => any | any[]) {\n    let prevXAbs = 0;\n    let prevYAbs = 0;\n    let pathStartXAbs = NaN;\n    let pathStartYAbs = NaN;\n\n    return function transform(command: any) {\n      if (isNaN(pathStartXAbs) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n\n      const result = f(command, prevXAbs, prevYAbs, pathStartXAbs, pathStartYAbs);\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        prevXAbs = pathStartXAbs;\n        prevYAbs = pathStartYAbs;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        prevXAbs = (command.relative ? prevXAbs + command.x : command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        prevYAbs = (command.relative ? prevYAbs + command.y : command.y);\n      }\n\n      if (command.type & SVGPathData.MOVE_TO) {\n        pathStartXAbs = prevXAbs;\n        pathStartYAbs = prevYAbs;\n      }\n\n      return result;\n    };\n  }\n  /*\n   * remove 0-length segments\n   */\n  export function SANITIZE(EPS = 0) {\n    assertNumbers(EPS);\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      const abs = Math.abs;\n      let skip = false;\n      let x1Rel = 0;\n      let y1Rel = 0;\n\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        x1Rel = isNaN(prevCurveC2X) ? 0 : prevX - prevCurveC2X;\n        y1Rel = isNaN(prevCurveC2Y) ? 0 : prevY - prevCurveC2Y;\n      }\n      if (command.type & (SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO)) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : 2 * prevX - prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : 2 * prevY - prevQuadCY;\n      } else if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y2;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      if (command.type & SVGPathData.LINE_COMMANDS ||\n        command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY || !command.lArcFlag) ||\n        command.type & SVGPathData.CURVE_TO || command.type & SVGPathData.SMOOTH_CURVE_TO ||\n        command.type & SVGPathData.QUAD_TO || command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        const xRel = \"undefined\" === typeof command.x ? 0 :\n          (command.relative ? command.x : command.x - prevX);\n        const yRel = \"undefined\" === typeof command.y ? 0 :\n          (command.relative ? command.y : command.y - prevY);\n\n        x1Rel = !isNaN(prevQuadCX) ? prevQuadCX - prevX :\n          \"undefined\" === typeof command.x1 ? x1Rel :\n            command.relative ? command.x :\n              command.x1 - prevX;\n        y1Rel = !isNaN(prevQuadCY) ? prevQuadCY - prevY :\n          \"undefined\" === typeof command.y1 ? y1Rel :\n            command.relative ? command.y :\n              command.y1 - prevY;\n\n        const x2Rel = \"undefined\" === typeof command.x2 ? 0 :\n          (command.relative ? command.x : command.x2 - prevX);\n        const y2Rel = \"undefined\" === typeof command.y2 ? 0 :\n          (command.relative ? command.y : command.y2 - prevY);\n\n        if (abs(xRel) <= EPS && abs(yRel) <= EPS &&\n          abs(x1Rel) <= EPS && abs(y1Rel) <= EPS &&\n          abs(x2Rel) <= EPS && abs(y2Rel) <= EPS) {\n          skip = true;\n        }\n      }\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        if (abs(prevX - pathStartX) <= EPS && abs(prevY - pathStartY) <= EPS) {\n          skip = true;\n        }\n      }\n\n      return skip ? [] : command;\n    });\n  }\n  // SVG Transforms : http://www.w3.org/TR/SVGTiny12/coords.html#TransformList\n  // Matrix : http://apike.ca/prog_svg_transform.html\n  // a c e\n  // b d f\n  export function MATRIX(a: number, b: number, c: number, d: number, e: number, f: number) {\n    assertNumbers(a, b, c, d, e, f);\n\n    return INFO((command, prevX, prevY, pathStartX) => {\n      const origX1 = command.x1;\n      const origX2 = command.x2;\n      // if isNaN(pathStartX), then this is the first command, which is ALWAYS an\n      // absolute MOVE_TO, regardless what the relative flag says\n      const comRel = command.relative && !isNaN(pathStartX);\n      const x = \"undefined\" !== typeof command.x ? command.x : (comRel ? 0 : prevX);\n      const y = \"undefined\" !== typeof command.y ? command.y : (comRel ? 0 : prevY);\n\n      if (command.type & SVGPathData.HORIZ_LINE_TO && 0 !== b) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (command.type & SVGPathData.VERT_LINE_TO && 0 !== c) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = (command.x * a) + (y * c) + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = (x * b) + command.y * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = command.x1 * a + command.y1 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = origX1 * b + command.y1 * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = command.x2 * a + command.y2 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = origX2 * b + command.y2 * d + (comRel ? 0 : f);\n      }\n      function sqr(x: number) { return x * x; }\n      const det = a * d - b * c;\n\n      if (\"undefined\" !== typeof command.xRot) {\n        // Skip if this is a pure translation\n        if (1 !== a || 0 !== b || 0 !== c || 1 !== d) {\n          // Special case for singular matrix\n          if (0 === det) {\n            // In the singular case, the arc is compressed to a line. The actual geometric image of the original\n            // curve under this transform possibly extends beyond the starting and/or ending points of the segment, but\n            // for simplicity we ignore this detail and just replace this command with a single line segment.\n            delete command.rX;\n            delete command.rY;\n            delete command.xRot;\n            delete command.lArcFlag;\n            delete command.sweepFlag;\n            command.type = SVGPathData.LINE_TO;\n          } else {\n            // Convert to radians\n            const xRot = command.xRot * Math.PI / 180;\n\n            // Convert rotated ellipse to general conic form\n            // x0^2/rX^2 + y0^2/rY^2 - 1 = 0\n            // x0 = x*cos(xRot) + y*sin(xRot)\n            // y0 = -x*sin(xRot) + y*cos(xRot)\n            // --> A*x^2 + B*x*y + C*y^2 - 1 = 0, where\n            const sinRot = Math.sin(xRot);\n            const cosRot = Math.cos(xRot);\n            const xCurve = 1 / sqr(command.rX);\n            const yCurve = 1 / sqr(command.rY);\n            const A = sqr(cosRot) * xCurve + sqr(sinRot) * yCurve;\n            const B = 2 * sinRot * cosRot * (xCurve - yCurve);\n            const C = sqr(sinRot) * xCurve + sqr(cosRot) * yCurve;\n\n            // Apply matrix to A*x^2 + B*x*y + C*y^2 - 1 = 0\n            // x1 = a*x + c*y\n            // y1 = b*x + d*y\n            //      (we can ignore e and f, since pure translations don\"t affect the shape of the ellipse)\n            // --> A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 = 0, where\n            const A1 = A * d * d - B * b * d + C * b * b;\n            const B1 = B * (a * d + b * c) - 2 * (A * c * d + C * a * b);\n            const C1 = A * c * c - B * a * c + C * a * a;\n\n            // Unapply newXRot to get back to axis-aligned ellipse equation\n            // x1 = x2*cos(newXRot) - y2*sin(newXRot)\n            // y1 = x2*sin(newXRot) + y2*cos(newXRot)\n            // A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 =\n            //   x2^2*(A1*cos(newXRot)^2 + B1*sin(newXRot)*cos(newXRot) + C1*sin(newXRot)^2)\n            //   + x2*y2*(2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2))\n            //   + y2^2*(A1*sin(newXRot)^2 - B1*sin(newXRot)*cos(newXRot) + C1*cos(newXRot)^2)\n            //   (which must have the same zeroes as)\n            // x2^2/newRX^2 + y2^2/newRY^2 - 1\n            //   (so we have)\n            // 2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2) = 0\n            // (A1 - C1)*sin(2*newXRot) = B1*cos(2*newXRot)\n            // 2*newXRot = atan2(B1, A1 - C1)\n            const newXRot = ((Math.atan2(B1, A1 - C1) + Math.PI) % Math.PI) / 2;\n            // For any integer n, (atan2(B1, A1 - C1) + n*pi)/2 is a solution to the above; incrementing n just swaps\n            // the x and y radii computed below (since that\"s what rotating an ellipse by pi/2 does).  Choosing the\n            // rotation between 0 and pi/2 eliminates the ambiguity and leads to more predictable output.\n\n            // Finally, we get newRX and newRY from the same-zeroes relationship that gave us newXRot\n            const newSinRot = Math.sin(newXRot);\n            const newCosRot = Math.cos(newXRot);\n\n            command.rX = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newCosRot) + B1 * newSinRot * newCosRot + C1 * sqr(newSinRot));\n            command.rY = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newSinRot) - B1 * newSinRot * newCosRot + C1 * sqr(newCosRot));\n            command.xRot = newXRot * 180 / Math.PI;\n          }\n        }\n      }\n      // sweepFlag needs to be inverted when mirroring shapes\n      // see http://www.itk.ilstu.edu/faculty/javila/SVG/SVG_drawing1/elliptical_curve.htm\n      // m 65,10 a 50,25 0 1 0 50,25\n      // M 65,60 A 50,25 0 1 1 115,35\n      if (\"undefined\" !== typeof command.sweepFlag && 0 > det) {\n        command.sweepFlag = +!command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  export function ROTATE(a: number, x = 0, y = 0) {\n    assertNumbers(a, x, y);\n    const sin = Math.sin(a);\n    const cos = Math.cos(a);\n\n    return MATRIX(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);\n  }\n  export function TRANSLATE(dX: number, dY = 0) {\n    assertNumbers(dX, dY);\n    return MATRIX(1, 0, 0, 1, dX, dY);\n  }\n  export function SCALE(dX: number, dY = dX) {\n    assertNumbers(dX, dY);\n    return MATRIX(dX, 0, 0, dY, 0, 0);\n  }\n  export function SKEW_X(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, 0, Math.atan(a), 1, 0, 0);\n  }\n  export function SKEW_Y(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, Math.atan(a), 0, 1, 0, 0);\n  }\n  export function X_AXIS_SYMMETRY(xOffset = 0) {\n    assertNumbers(xOffset);\n    return MATRIX(-1, 0, 0, 1, xOffset, 0);\n  }\n  export function Y_AXIS_SYMMETRY(yOffset = 0) {\n    assertNumbers(yOffset);\n    return MATRIX(1, 0, 0, -1, 0, yOffset);\n  }\n  // Convert arc commands to curve commands\n  export function A_TO_C() {\n    return INFO((command, prevX, prevY) => {\n      if (SVGPathData.ARC === command.type) {\n        return a2c(command, command.relative ? 0 : prevX, command.relative ? 0 : prevY);\n      }\n      return command;\n    });\n  }\n  // @see annotateArcCommand\n  export function ANNOTATE_ARCS() {\n    return INFO((c, x1, y1) => {\n      if (c.relative) {\n        x1 = 0;\n        y1 = 0;\n      }\n      if (SVGPathData.ARC === c.type) {\n        annotateArcCommand(c, x1, y1);\n      }\n      return c;\n    });\n  }\n  export function CLONE() {\n    return (c: SVGCommand) => {\n      const result = {} as SVGCommand;\n      // tslint:disable-next-line\n      for (const key in c) {\n        result[key as keyof SVGCommand] = c[key as keyof SVGCommand];\n      }\n      return result;\n    };\n  }\n  // @see annotateArcCommand\n  export function CALCULATE_BOUNDS() {\n    const clone = CLONE();\n    const toAbs = TO_ABS();\n    const qtToC = QT_TO_C();\n    const normST = NORMALIZE_ST();\n    const f: TransformFunction & {minX: number, maxX: number, minY: number, maxY: number} =\n        INFO((command, prevXAbs, prevYAbs) => {\n      const c = normST(qtToC(toAbs(clone(command))));\n      function fixX(absX: number) {\n        if (absX > f.maxX) { f.maxX = absX; }\n        if (absX < f.minX) { f.minX = absX; }\n      }\n      function fixY(absY: number) {\n        if (absY > f.maxY) { f.maxY = absY; }\n        if (absY < f.minY) { f.minY = absY; }\n      }\n      if (c.type & SVGPathData.DRAWING_COMMANDS) {\n        fixX(prevXAbs);\n        fixY(prevYAbs);\n      }\n      if (c.type & SVGPathData.HORIZ_LINE_TO) {\n        fixX(c.x);\n      }\n      if (c.type & SVGPathData.VERT_LINE_TO) {\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.LINE_TO) {\n        fixX(c.x);\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.CURVE_TO) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        const xDerivRoots = bezierRoot(prevXAbs, c.x1, c.x2, c.x);\n\n        for (const derivRoot of xDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixX(bezierAt(prevXAbs, c.x1, c.x2, c.x, derivRoot));\n          }\n        }\n        const yDerivRoots = bezierRoot(prevYAbs, c.y1, c.y2, c.y);\n\n        for (const derivRoot of yDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixY(bezierAt(prevYAbs, c.y1, c.y2, c.y, derivRoot));\n          }\n        }\n      }\n      if (c.type & SVGPathData.ARC) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        annotateArcCommand(c, prevXAbs, prevYAbs);\n        // p = cos(phi) * xv + sin(phi) * yv\n        // dp = -sin(phi) * xv + cos(phi) * yv = 0\n        const xRotRad = c.xRot / 180 * Math.PI;\n        // points on ellipse for phi = 0° and phi = 90°\n        const x0 = Math.cos(xRotRad) * c.rX;\n        const y0 = Math.sin(xRotRad) * c.rX;\n        const x90 = -Math.sin(xRotRad) * c.rY;\n        const y90 = Math.cos(xRotRad) * c.rY;\n\n        // annotateArcCommand returns phi1 and phi2 such that -180° < phi1 < 180° and phi2 is smaller or greater\n        // depending on the sweep flag. Calculate phiMin, phiMax such that -180° < phiMin < 180° and phiMin < phiMax\n        const [phiMin, phiMax] = c.phi1 < c.phi2 ?\n          [c.phi1, c.phi2] :\n          (-180 > c.phi2 ? [c.phi2 + 360, c.phi1 + 360] : [c.phi2, c.phi1]);\n        const normalizeXiEta = ([xi, eta]: [number, number]) => {\n          const phiRad = Math.atan2(eta, xi);\n          const phi = phiRad * 180 / Math.PI;\n\n          return phi < phiMin ? phi + 360 : phi;\n        };\n        // xi = cos(phi), eta = sin(phi)\n\n        const xDerivRoots = intersectionUnitCircleLine(x90, -x0, 0).map(normalizeXiEta);\n        for (const derivRoot of xDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixX(arcAt(c.cX, x0, x90, derivRoot));\n          }\n        }\n\n        const yDerivRoots = intersectionUnitCircleLine(y90, -y0, 0).map(normalizeXiEta);\n        for (const derivRoot of yDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixY(arcAt(c.cY, y0, y90, derivRoot));\n          }\n        }\n      }\n      return command;\n    }) as any;\n\n    f.minX = Infinity;\n    f.maxX = -Infinity;\n    f.minY = Infinity;\n    f.maxY = -Infinity;\n    return f;\n  }\n}\n","import { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformFunction } from \"./types\";\n\nexport abstract class TransformableSVG {\n  round(x?: number) {\n    return this.transform(SVGPathDataTransformer.ROUND(x));\n  }\n\n  toAbs() {\n    return this.transform(SVGPathDataTransformer.TO_ABS());\n  }\n\n  toRel() {\n    return this.transform(SVGPathDataTransformer.TO_REL());\n  }\n\n  normalizeHVZ(a?: boolean, b?: boolean, c?: boolean) {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_HVZ(a, b, c));\n  }\n\n  normalizeST() {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_ST());\n  }\n\n  qtToC() {\n    return this.transform(SVGPathDataTransformer.QT_TO_C());\n  }\n\n  aToC() {\n    return this.transform(SVGPathDataTransformer.A_TO_C());\n  }\n\n  sanitize(eps?: number) {\n    return this.transform(SVGPathDataTransformer.SANITIZE(eps));\n  }\n\n  translate(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.TRANSLATE(x, y));\n  }\n\n  scale(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.SCALE(x, y));\n  }\n\n  rotate(a: number, x?: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.ROTATE(a, x, y));\n  }\n\n  matrix(a: number, b: number, c: number, d: number, e: number, f: number) {\n    return this.transform(SVGPathDataTransformer.MATRIX(a, b, c, d, e, f));\n  }\n\n  skewX(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_X(a));\n  }\n\n  skewY(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_Y(a));\n  }\n\n  xSymmetry(xOffset?: number) {\n    return this.transform(SVGPathDataTransformer.X_AXIS_SYMMETRY(xOffset));\n  }\n\n  ySymmetry(yOffset?: number) {\n    return this.transform(SVGPathDataTransformer.Y_AXIS_SYMMETRY(yOffset));\n  }\n\n  annotateArcs() {\n    return this.transform(SVGPathDataTransformer.ANNOTATE_ARCS());\n  }\n\n  abstract transform(transformFunction: TransformFunction): this;\n}\n","// Parse SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\nimport { COMMAND_ARG_COUNTS, SVGPathData } from \"./SVGPathData\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n// Private consts : Char groups\nconst isWhiteSpace = (c: string) =>\n  \" \" === c || \"\\t\" === c || \"\\r\" === c || \"\\n\" === c;\nconst isDigit = (c: string) =>\n  \"0\".charCodeAt(0) <= c.charCodeAt(0) && c.charCodeAt(0) <= \"9\".charCodeAt(0);\nconst COMMANDS = \"mMzZlLhHvVcCsSqQtTaA\";\n\nexport class SVGPathDataParser extends TransformableSVG {\n  private curNumber: string = \"\";\n  private curCommandType: SVGCommand[\"type\"] | -1 = -1;\n  private curCommandRelative = false;\n  private canParseCommandOrComma = true;\n  private curNumberHasExp = false;\n  private curNumberHasExpDigits = false;\n  private curNumberHasDecimal = false;\n  private curArgs: number[] = [];\n\n  constructor() {\n    super();\n  }\n\n  finish(commands: SVGCommand[] = []) {\n    this.parse(\" \", commands);\n    // Adding residual command\n    if (0 !== this.curArgs.length || !this.canParseCommandOrComma) {\n      throw new SyntaxError(\"Unterminated command at the path end.\");\n    }\n    return commands;\n  }\n\n  parse(str: string, commands: SVGCommand[] = []) {\n    const finishCommand = (command: SVGCommand) => {\n      commands.push(command);\n      this.curArgs.length = 0;\n      this.canParseCommandOrComma = true;\n    };\n\n    for (let i = 0; i < str.length; i++) {\n      const c = str[i];\n      // White spaces parsing\n      const isAArcFlag = this.curCommandType === SVGPathData.ARC &&\n        (this.curArgs.length === 3 || this.curArgs.length === 4) &&\n        this.curNumber.length === 1 &&\n        (this.curNumber === \"0\" || this.curNumber === \"1\");\n      const isEndingDigit = isDigit(c) && (\n        (this.curNumber === \"0\" && c === \"0\") ||\n        isAArcFlag\n      );\n\n      if (\n        isDigit(c) &&\n        !isEndingDigit\n      ) {\n        this.curNumber += c;\n        this.curNumberHasExpDigits = this.curNumberHasExp;\n        continue;\n      }\n      if (\"e\" === c || \"E\" === c) {\n        this.curNumber += c;\n        this.curNumberHasExp = true;\n        continue;\n      }\n      if (\n        (\"-\" === c || \"+\" === c) &&\n        this.curNumberHasExp &&\n        !this.curNumberHasExpDigits\n      ) {\n        this.curNumber += c;\n        continue;\n      }\n      // if we already have a \".\", it means we are starting a new number\n      if (\".\" === c && !this.curNumberHasExp && !this.curNumberHasDecimal && !isAArcFlag) {\n        this.curNumber += c;\n        this.curNumberHasDecimal = true;\n        continue;\n      }\n\n      // New number\n      if (this.curNumber && -1 !== this.curCommandType) {\n        const val = Number(this.curNumber);\n        if (isNaN(val)) {\n          throw new SyntaxError(`Invalid number ending at ${i}`);\n        }\n        if (this.curCommandType === SVGPathData.ARC) {\n          if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n            if (0 > val) {\n              throw new SyntaxError(\n                `Expected positive number, got \"${val}\" at index \"${i}\"`,\n              );\n            }\n          } else if (3 === this.curArgs.length || 4 === this.curArgs.length) {\n            if (\"0\" !== this.curNumber && \"1\" !== this.curNumber) {\n              throw new SyntaxError(\n                `Expected a flag, got \"${this.curNumber}\" at index \"${i}\"`,\n              );\n            }\n          }\n        }\n        this.curArgs.push(val);\n        if (this.curArgs.length === COMMAND_ARG_COUNTS[this.curCommandType]) {\n          if (SVGPathData.HORIZ_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.HORIZ_LINE_TO,\n              relative: this.curCommandRelative,\n              x: val,\n            });\n          } else if (SVGPathData.VERT_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.VERT_LINE_TO,\n              relative: this.curCommandRelative,\n              y: val,\n            });\n            // Move to / line to / smooth quadratic curve to commands (x, y)\n          } else if (\n            this.curCommandType === SVGPathData.MOVE_TO ||\n            this.curCommandType === SVGPathData.LINE_TO ||\n            this.curCommandType === SVGPathData.SMOOTH_QUAD_TO\n          ) {\n            finishCommand({\n              type: this.curCommandType,\n              relative: this.curCommandRelative,\n              x: this.curArgs[0],\n              y: this.curArgs[1],\n            } as SVGCommand);\n            // Switch to line to state\n            if (SVGPathData.MOVE_TO === this.curCommandType) {\n              this.curCommandType = SVGPathData.LINE_TO;\n            }\n          } else if (this.curCommandType === SVGPathData.CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.CURVE_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x2: this.curArgs[2],\n              y2: this.curArgs[3],\n              x: this.curArgs[4],\n              y: this.curArgs[5],\n            });\n          } else if (this.curCommandType === SVGPathData.SMOOTH_CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.SMOOTH_CURVE_TO,\n              relative: this.curCommandRelative,\n              x2: this.curArgs[0],\n              y2: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.QUAD_TO) {\n            finishCommand({\n              type: SVGPathData.QUAD_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.ARC) {\n            finishCommand({\n              type: SVGPathData.ARC,\n              relative: this.curCommandRelative,\n              rX: this.curArgs[0],\n              rY: this.curArgs[1],\n              xRot: this.curArgs[2],\n              lArcFlag: this.curArgs[3] as 0 | 1,\n              sweepFlag: this.curArgs[4] as 0 | 1,\n              x: this.curArgs[5],\n              y: this.curArgs[6],\n            });\n          }\n        }\n        this.curNumber = \"\";\n        this.curNumberHasExpDigits = false;\n        this.curNumberHasExp = false;\n        this.curNumberHasDecimal = false;\n        this.canParseCommandOrComma = true;\n      }\n      // Continue if a white space or a comma was detected\n      if (isWhiteSpace(c)) {\n        continue;\n      }\n      if (\",\" === c && this.canParseCommandOrComma) {\n        // L 0,0, H is not valid:\n        this.canParseCommandOrComma = false;\n        continue;\n      }\n      // if a sign is detected, then parse the new number\n      if (\"+\" === c || \"-\" === c || \".\" === c) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = \".\" === c;\n        continue;\n      }\n      // if a 0 is detected, then parse the new number\n      if (isEndingDigit) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = false;\n        continue;\n      }\n\n      // Adding residual command\n      if (0 !== this.curArgs.length) {\n        throw new SyntaxError(`Unterminated command at index ${i}.`);\n      }\n      if (!this.canParseCommandOrComma) {\n        throw new SyntaxError(\n          `Unexpected character \"${c}\" at index ${i}. Command cannot follow comma`,\n        );\n      }\n      this.canParseCommandOrComma = false;\n      // Detecting the next command\n      if (\"z\" === c || \"Z\" === c) {\n        commands.push({\n          type: SVGPathData.CLOSE_PATH,\n        });\n        this.canParseCommandOrComma = true;\n        this.curCommandType = -1;\n        continue;\n        // Horizontal move to command\n      } else if (\"h\" === c || \"H\" === c) {\n        this.curCommandType = SVGPathData.HORIZ_LINE_TO;\n        this.curCommandRelative = \"h\" === c;\n        // Vertical move to command\n      } else if (\"v\" === c || \"V\" === c) {\n        this.curCommandType = SVGPathData.VERT_LINE_TO;\n        this.curCommandRelative = \"v\" === c;\n        // Move to command\n      } else if (\"m\" === c || \"M\" === c) {\n        this.curCommandType = SVGPathData.MOVE_TO;\n        this.curCommandRelative = \"m\" === c;\n        // Line to command\n      } else if (\"l\" === c || \"L\" === c) {\n        this.curCommandType = SVGPathData.LINE_TO;\n        this.curCommandRelative = \"l\" === c;\n        // Curve to command\n      } else if (\"c\" === c || \"C\" === c) {\n        this.curCommandType = SVGPathData.CURVE_TO;\n        this.curCommandRelative = \"c\" === c;\n        // Smooth curve to command\n      } else if (\"s\" === c || \"S\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_CURVE_TO;\n        this.curCommandRelative = \"s\" === c;\n        // Quadratic bezier curve to command\n      } else if (\"q\" === c || \"Q\" === c) {\n        this.curCommandType = SVGPathData.QUAD_TO;\n        this.curCommandRelative = \"q\" === c;\n        // Smooth quadratic bezier curve to command\n      } else if (\"t\" === c || \"T\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_QUAD_TO;\n        this.curCommandRelative = \"t\" === c;\n        // Elliptic arc command\n      } else if (\"a\" === c || \"A\" === c) {\n        this.curCommandType = SVGPathData.ARC;\n        this.curCommandRelative = \"a\" === c;\n      } else {\n        throw new SyntaxError(`Unexpected character \"${c}\" at index ${i}.`);\n      }\n    }\n    return commands;\n  }\n  /**\n   * Return a wrapper around this parser which applies the transformation on parsed commands.\n   */\n  transform(transform: TransformFunction) {\n    const result = Object.create(this, {\n      parse: {\n        value(chunk: string, commands: SVGCommand[] = []) {\n          const parsedCommands = Object.getPrototypeOf(this).parse.call(\n            this,\n            chunk,\n          );\n          for (const c of parsedCommands) {\n            const cT = transform(c);\n            if (Array.isArray(cT)) {\n              commands.push(...cT);\n            } else {\n              commands.push(cT);\n            }\n          }\n          return commands;\n        },\n      },\n    });\n    return result as this;\n  }\n}\n","import { encodeSVGPath } from \"./SVGPathDataEncoder\";\nimport { SVGPathDataParser } from \"./SVGPathDataParser\";\nimport { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand } from \"./types\";\n\nexport class SVGPathData extends TransformableSVG {\n  commands: SVGCommand[];\n  constructor(content: string | SVGCommand[]) {\n    super();\n    if (\"string\" === typeof content) {\n      this.commands = SVGPathData.parse(content);\n    } else {\n      this.commands = content;\n    }\n  }\n\n  encode() {\n    return SVGPathData.encode(this.commands);\n  }\n\n  getBounds() {\n    const boundsTransform = SVGPathDataTransformer.CALCULATE_BOUNDS();\n\n    this.transform(boundsTransform);\n    return boundsTransform;\n  }\n\n  transform(\n    transformFunction: (input: SVGCommand) => SVGCommand | SVGCommand[],\n  ) {\n    const newCommands = [];\n\n    for (const command of this.commands) {\n      const transformedCommand = transformFunction(command);\n\n      if (Array.isArray(transformedCommand)) {\n        newCommands.push(...transformedCommand);\n      } else {\n        newCommands.push(transformedCommand);\n      }\n    }\n    this.commands = newCommands;\n    return this;\n  }\n\n  static encode(commands: SVGCommand[]) {\n    return encodeSVGPath(commands);\n      }\n\n  static parse(path: string) {\n    const parser = new SVGPathDataParser();\n    const commands: SVGCommand[] = [];\n    parser.parse(path, commands);\n    parser.finish(commands);\n    return commands;\n  }\n\n  static readonly CLOSE_PATH: 1 = 1;\n  static readonly MOVE_TO: 2 = 2;\n  static readonly HORIZ_LINE_TO: 4 = 4;\n  static readonly VERT_LINE_TO: 8 = 8;\n  static readonly LINE_TO: 16 = 16;\n  static readonly CURVE_TO: 32 = 32;\n  static readonly SMOOTH_CURVE_TO: 64 = 64;\n  static readonly QUAD_TO: 128 = 128;\n  static readonly SMOOTH_QUAD_TO: 256 = 256;\n  static readonly ARC: 512 = 512;\n  static readonly LINE_COMMANDS = SVGPathData.LINE_TO | SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO;\n  static readonly DRAWING_COMMANDS = SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO | SVGPathData.LINE_TO |\n  SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO | SVGPathData.QUAD_TO |\n  SVGPathData.SMOOTH_QUAD_TO | SVGPathData.ARC;\n}\n\nexport const COMMAND_ARG_COUNTS = {\n    [SVGPathData.MOVE_TO]: 2,\n    [SVGPathData.LINE_TO]: 2,\n    [SVGPathData.HORIZ_LINE_TO]: 1,\n    [SVGPathData.VERT_LINE_TO]: 1,\n    [SVGPathData.CLOSE_PATH]: 0,\n    [SVGPathData.QUAD_TO]: 4,\n    [SVGPathData.SMOOTH_QUAD_TO]: 2,\n    [SVGPathData.CURVE_TO]: 6,\n    [SVGPathData.SMOOTH_CURVE_TO]: 4,\n    [SVGPathData.ARC]: 7,\n};\n\nexport {encodeSVGPath} from \"./SVGPathDataEncoder\";\nexport {SVGPathDataParser} from \"./SVGPathDataParser\";\nexport {SVGPathDataTransformer} from \"./SVGPathDataTransformer\";\n"],"sourceRoot":""}