{"version":3,"sources":["webpack://celenganku-app/../src/utils.js","webpack://celenganku-app/../src/tags.js","webpack://celenganku-app/../src/attrs.js","webpack://celenganku-app/../src/regexp.js","webpack://celenganku-app/../src/purify.js"],"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","Reflect","apply","construct","fun","thisValue","arrayForEach","unapply","Array","prototype","arrayPop","arrayPush","stringToLowerCase","String","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","RegExp","typeErrorCreate","unconstruct","func","args","thisArg","l","array","element","lcElement","set","newObject","property","object","desc","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","suffix","ATTR_NAME","document","currentScript","hasAttribute","getAttribute","policyName","createPolicy","createHTML","_","console","DOMPurify","root","createDOMPurify","nodeType","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","Text","Comment","DOMParser","ElementPrototype","cloneNode","lookupGetter","getNextSibling","getChildNodes","getParentNode","template","createElement","content","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","documentMode","clone","hooks","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","addToSet","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ALLOWED_URI_REGEXP","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","_checkValidNamespace","parent","namespaceURI","tagName","parentTagName","Boolean","commonSvgAndHTMLElements","_forceRemove","node","_removeAttribute","attribute","getAttributeNode","from","_initDocument","doc","leadingWhitespace","dirty","matches","dirtyPayload","parseFromString","createHTMLDocument","body","parentNode","createTextNode","childNodes","call","_createIterator","ownerDocument","SHOW_ELEMENT","_isClobbered","elm","attributes","_isNode","_executeHook","hook","_sanitizeElements","currentNode","allowedTags","childCount","i","textContent","_isValidAttribute","lcName","value","lcTag","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","name","nodeName","_sanitizeShadowDOM","shadowNode","shadowIterator","importedNode","oldNode","returnNode","toStaticHTML","nodeIterator","serializedHTML","tag","entryPoint","hookFunction"],"mappings":"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","file":"260.js","sourcesContent":["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  return null;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'feimage',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n","import * as TAGS from './tags';\nimport * as ATTRS from './attrs';\nimport * as EXPRESSIONS from './regexp';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    Text,\n    Comment,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML =\n    trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML('')\n      : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    getElementsByTagName,\n    createDocumentFragment,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify.\n   *\n   * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n   * might cause XSS from attacks hidden in closed shadowroots in case the browser\n   * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n   */\n  let RETURN_DOM_IMPORT = true;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  const FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR)\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS)\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      const commonSvgAndHTMLElements = addToSet({}, [\n        'title',\n        'style',\n        'font',\n        'a',\n        'script',\n      ]);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /* Use the DOMParser API by default, fallback later if needs be */\n    try {\n      doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n    } catch (_) {}\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createHTMLDocument('');\n      const { body } = doc;\n      body.parentNode.removeChild(body.parentNode.firstElementChild);\n      body.outerHTML = dirtyPayload;\n    }\n\n    if (dirty && leadingWhitespace) {\n      doc.body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        doc.body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      () => {\n        return NodeFilter.FILTER_ACCEPT;\n      },\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (\n      typeof elm.nodeName !== 'string' ||\n      typeof elm.textContent !== 'string' ||\n      typeof elm.removeChild !== 'function' ||\n      !(elm.attributes instanceof NamedNodeMap) ||\n      typeof elm.removeAttribute !== 'function' ||\n      typeof elm.setAttribute !== 'function' ||\n      typeof elm.namespaceURI !== 'string' ||\n      typeof elm.insertBefore !== 'function'\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = stringToLowerCase(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode);\n        const childNodes = getChildNodes(currentNode);\n        const childCount = childNodes.length;\n        for (let i = childCount - 1; i >= 0; --i) {\n          parentNode.insertBefore(\n            cloneNode(childNodes[i], true),\n            getNextSibling(currentNode)\n          );\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR, lcName)) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = stringTrim(attr.value);\n      lcName = stringToLowerCase(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = currentNode.nodeName.toLowerCase();\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    if (!dirty) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = stringToLowerCase(tag);\n    const lcName = stringToLowerCase(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n"],"sourceRoot":""}